!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
.pl-c	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-c \/* comment *\/ {$/;"	c
.pl-c1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-c1      \/* constant, markup.raw, meta.diff.header, meta.module-reference, meta.property-nam/;"	c
.pl-e	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-e  \/* entity *\/,$/;"	c
.pl-en	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-en \/* entity.name *\/ {$/;"	c
.pl-ent	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-ent \/* entity.name.tag *\/ {$/;"	c
.pl-id	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-id \/* invalid.deprecated *\/ {$/;"	c
.pl-ii	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-ii \/* invalid.illegal *\/ {$/;"	c
.pl-k	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-k \/* keyword, storage, storage.type *\/ {$/;"	c
.pl-mb	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mb \/* markup.bold *\/ {$/;"	c
.pl-md	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-md \/* markup.deleted, meta.diff.header.from-file *\/ {$/;"	c
.pl-mdr	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mdr \/* meta.diff.range *\/ {$/;"	c
.pl-mh	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mh        \/* markup.heading *\/,$/;"	c
.pl-mh .pl-en	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mh .pl-en \/* markup.heading entity.name *\/,$/;"	c
.pl-mi	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mi \/* markup.italic *\/ {$/;"	c
.pl-mi1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mi1 \/* markup.inserted, meta.diff.header.to-file *\/ {$/;"	c
.pl-ml	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-ml \/* markup.list *\/ {$/;"	c
.pl-mo	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mo \/* meta.output *\/ {$/;"	c
.pl-mq	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-mq \/* markup.quote *\/ {$/;"	c
.pl-ms	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-ms        \/* meta.separator *\/ {$/;"	c
.pl-pds	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-pds              \/* punctuation.definition.string, string.regexp.character-class *\/,$/;"	c
.pl-s	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-s                \/* string *\/,$/;"	c
.pl-s .pl-pse .pl-s1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-s .pl-pse .pl-s1 \/* string punctuation.section.embedded source *\/,$/;"	c
.pl-s .pl-s1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-s .pl-s1 \/* string source *\/,$/;"	c
.pl-s .pl-v	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-s .pl-v \/* string variable *\/ {$/;"	c
.pl-smi	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-smi      \/* storage.modifier.import, storage.modifier.package, storage.type.java, variable./;"	c
.pl-sr	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-sr               \/* string.regexp *\/,$/;"	c
.pl-sr .pl-cce	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-sr .pl-cce       \/* string.regexp constant.character.escape *\/,$/;"	c
.pl-sr .pl-cce	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-sr .pl-cce \/* string.regexp constant.character.escape *\/ {$/;"	c
.pl-sr .pl-sra	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-sr .pl-sra       \/* string.regexp string.regexp.arbitrary-repitition *\/,$/;"	c
.pl-sr .pl-sre	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-sr .pl-sre       \/* string.regexp source.ruby.embedded *\/ {$/;"	c
.pl-v	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/github-light.css	/^.pl-v \/* variable *\/ {$/;"	c
.wrapper	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^.wrapper {$/;"	c
1. Clone the repository	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^1. Clone the repository$/;"	s	chapter:Installation Instructions
2. Run the installation script	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^2. Run the installation script$/;"	s	chapter:Installation Instructions
3. Test the installation	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^3. Test the installation$/;"	s	chapter:Installation Instructions
3DNet	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _3DNet: https:\/\/repo.acin.tuwien.ac.at\/tmp\/permanent\/3d-net.org\/$/;"	T	section:Academic Use
3DNet	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _3DNet: https:\/\/repo.acin.tuwien.ac.at\/tmp\/permanent\/3d-net.org\/$/;"	T	chapter:Dex-Net Object Mesh Dataset v1.1
3DNet	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _3DNet: https:\/\/repo.acin.tuwien.ac.at\/tmp\/permanent\/3d-net.org\/$/;"	T	chapter:License
4. Try it out!	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^4. Try it out!$/;"	s	chapter:Installation Instructions
ALLSPHINXOPTS	docker_files/dexnet_base/dex-net/docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source$/;"	m
ALLSPHINXOPTS	docker_files/dexnet_base/dex-net/docs/make.bat	/^	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%$/;"	v
ALLSPHINXOPTS	docker_files/dexnet_base/dex-net/docs/make.bat	/^set ALLSPHINXOPTS=-d %BUILDDIR%\/doctrees %SPHINXOPTS% source$/;"	v
API	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    API = {0: ('Open a database', 'open_database'),$/;"	v	class:DexNet_cli
Academic Use	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Academic Use$/;"	s	chapter:Berkeley AUTOLAB's Dex-Net Package
AdaptiveSamplingResult	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class AdaptiveSamplingResult:$/;"	c
AndTerminationCondition	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^class AndTerminationCondition(TerminationCondition):$/;"	c
AntipodalGraspSampler	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^class AntipodalGraspSampler(GraspSampler):$/;"	c
Authors and Contributors	docker_files/dexnet_base/dex-net/docs/source/static_content/index.md	/^### Authors and Contributors$/;"	S
BUILDDIR	docker_files/dexnet_base/dex-net/docs/Makefile	/^BUILDDIR      = build$/;"	m
BUILDDIR	docker_files/dexnet_base/dex-net/docs/make.bat	/^set BUILDDIR=build$/;"	v
Berkeley AUTOLAB	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Berkeley AUTOLAB: http:\/\/autolab.berkeley.edu\/$/;"	T	section:Academic Use
Berkeley AUTOLAB's Dex-Net Package	docker_files/dexnet_base/dex-net/README.md	/^# Berkeley AUTOLAB's Dex-Net Package$/;"	c
Berkeley AUTOLAB's Dex-Net Package	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Berkeley AUTOLAB's Dex-Net Package$/;"	c
BernoulliModel	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class BernoulliModel(DiscreteModel):$/;"	c
BernoulliSnapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class BernoulliSnapshot(Snapshot):$/;"	c
BetaBernoulliBandit	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class BetaBernoulliBandit(DiscreteAdaptiveSampler):$/;"	c
BetaBernoulliBayesUCBPolicy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class BetaBernoulliBayesUCBPolicy(DiscreteSelectionPolicy):$/;"	c
BetaBernoulliGittinsIndex98Policy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class BetaBernoulliGittinsIndex98Policy(DiscreteSelectionPolicy):$/;"	c
BetaBernoulliModel	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class BetaBernoulliModel(DiscreteModel):$/;"	c
BetaBernoulliSnapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class BetaBernoulliSnapshot(Snapshot):$/;"	c
Building	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^Building$/;"	s	chapter:Documentation
CACHE_FILENAME	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^CACHE_FILENAME = 'grasp_cache.pkl'$/;"	v
CAM_FRAME_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CAM_FRAME_KEY = 'cam_frame'$/;"	v
CAM_INT_PT_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CAM_INT_PT_KEY = 'cam_int_pt'$/;"	v
CAM_POS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CAM_POS_KEY = 'cam_pos'$/;"	v
CAM_ROT_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CAM_ROT_KEY = 'cam_rot'$/;"	v
CATEGORY_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CATEGORY_KEY = 'category'$/;"	v
CCBPLogLikelihood	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class CCBPLogLikelihood(Objective):$/;"	c
CENTER_X	ros_nodes/test_camera_node.py	/^    CENTER_X = float(DEPTH_IM_WIDTH-1) \/ 2.0$/;"	v	class:PrimesenseSensor
CENTER_Y	ros_nodes/test_camera_node.py	/^    CENTER_Y = float(DEPTH_IM_HEIGHT-1) \/ 2.0$/;"	v	class:PrimesenseSensor
COLOR_IM_HEIGHT	ros_nodes/test_camera_node.py	/^    COLOR_IM_HEIGHT = 480$/;"	v	class:PrimesenseSensor
COLOR_IM_WIDTH	ros_nodes/test_camera_node.py	/^    COLOR_IM_WIDTH = 640$/;"	v	class:PrimesenseSensor
COMPRESSED_TENSOR_EXT	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^COMPRESSED_TENSOR_EXT = '.npz'$/;"	v
CONFIG	docker_files/dexnet_base/dex-net/test/database_test.py	/^CONFIG = YamlConfig(TEST_CONFIG_NAME)$/;"	v
CONFIG	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^CONFIG = YamlConfig(TEST_CONFIG_NAME)$/;"	v
CONFIG	docker_files/dexnet_base/dex-net/test/learning_test.py	/^CONFIG = YamlConfig(TEST_CONFIG_NAME)$/;"	v
CONNECTED_COMPONENTS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CONNECTED_COMPONENTS_KEY = 'connected_components'$/;"	v
CONVEX_PIECES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CONVEX_PIECES_KEY = 'convex_pieces'$/;"	v
CREATION_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^CREATION_KEY = 'time_created'$/;"	v
ClassificationResult	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^class ClassificationResult(object):$/;"	c
Code	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^        <h2 class="header">Code<\/h2>$/;"	i
Code and Data	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <a id="codeanddata" class="anchor" href="#codeanddata" aria-hidden="true"><span class="oct/;"	j
Command Line Interface (CLI) example	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^.. _Command Line Interface (CLI) example: http:\/\/bit.ly\/2uPEliy$/;"	T	section:4. Try it out!
Completer	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^class Completer(object):$/;"	c
ConfidenceTerminationCondition	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^class ConfidenceTerminationCondition(TerminationCondition):$/;"	c
ConfusionMatrix	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^class ConfusionMatrix(object):$/;"	c
Contact	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^class Contact:$/;"	c
Contact3D	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^class Contact3D(Contact):$/;"	c
Contributors	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <h2 class="header" id="contact"><font color="black">Contributors<\/font><\/h2>$/;"	i
CorrelatedBayesUCB	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class CorrelatedBayesUCB(CorrelatedBetaBernoulliBandit):$/;"	c
CorrelatedBetaBernoulliBandit	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class CorrelatedBetaBernoulliBandit(DiscreteAdaptiveSampler):$/;"	c
CorrelatedBetaBernoulliModel	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class CorrelatedBetaBernoulliModel(BetaBernoulliModel):$/;"	c
CorrelatedGittins	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class CorrelatedGittins(CorrelatedBetaBernoulliBandit):$/;"	c
CorrelatedThompsonSampling	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class CorrelatedThompsonSampling(CorrelatedBetaBernoulliBandit):$/;"	c
Creating pages manually	docker_files/dexnet_base/dex-net/docs/source/static_content/index.md	/^### Creating pages manually$/;"	S
CrossEntropyLoss	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class CrossEntropyLoss(Objective):$/;"	c
Custom Database Generation	docker_files/dexnet_base/dex-net/README.md	/^## Custom Database Generation$/;"	s
DATASETS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^DATASETS_KEY = 'datasets'$/;"	v
DATASET_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^DATASET_KEY = 'dataset'$/;"	v
DEC_TAG	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^DEC_TAG = '_dec'$/;"	v
DEFAULT_CONFIG	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^DEFAULT_CONFIG = 'cfg\/apps\/cli_parameters.yaml'$/;"	v
DEF_MAX_ITER	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^DEF_MAX_ITER = 100$/;"	v
DEPTH_IM_HEIGHT	ros_nodes/test_camera_node.py	/^    DEPTH_IM_HEIGHT = 480$/;"	v	class:PrimesenseSensor
DEPTH_IM_WIDTH	ros_nodes/test_camera_node.py	/^    DEPTH_IM_WIDTH = 640$/;"	v	class:PrimesenseSensor
DEPTH_TO_COLOR	ros_nodes/test_camera_node.py	/^    DEPTH_TO_COLOR = 1$/;"	v	class:PrimesenseRegistrationMode
DEXNET_API_DEFAULTS_FILE	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^DEXNET_API_DEFAULTS_FILE = DEXNET_DIR + 'cfg\/api_defaults.yaml'$/;"	v
DEXNET_DIR	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^DEXNET_DIR = os.path.realpath(os.path.dirname(os.path.realpath(__file__)) + '\/..\/..\/') + '\/'$/;"	v
Database	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^class Database(object):$/;"	c
Database Manipulation	docker_files/dexnet_base/dex-net/docs/source/tutorials/cli.rst	/^Database Manipulation$/;"	c
Dataset	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^class Dataset(object):$/;"	c
Datasets	docker_files/dexnet_base/dex-net/README.md	/^## Datasets$/;"	s
Datasets	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^        <h2 class="header">Datasets<\/h2>$/;"	i
Deploying Documentation	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^Deploying Documentation$/;"	s	chapter:Documentation
Designer Templates	docker_files/dexnet_base/dex-net/docs/source/static_content/index.md	/^### Designer Templates$/;"	S
Development	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Development$/;"	s	chapter:Berkeley AUTOLAB's Dex-Net Package
Dex-Net	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^        <h1 class="header"><a href="https:\/\/berkeleyautomation.github.io\/dex-net">Dex-Net<\/a/;"	h
Dex-Net 1.0: A Cloud-Based Network of 3D Objects for Robust Grasp Planning Using a Multi-Armed Bandit Model with Correlated Rewards	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <h2 class="header" id="dexnet_1"><font color="black">Dex-Net 1.0: A Cloud-Based Network of/;"	i
Dex-Net 2.0 HDF5 Database	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Dex-Net 2.0 HDF5 Database: http:\/\/bit.ly\/2vb3OCz$/;"	T	section:Links
Dex-Net 2.0 HDF5 Database	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^Dex-Net 2.0 HDF5 Database$/;"	c
Dex-Net 2.0 HDF5 Database 	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _Dex-Net 2.0 HDF5 Database : http:\/\/bit.ly\/2vb3OCz$/;"	T	chapter:Dex-Net 2.0 HDF5 Database
Dex-Net 2.0 Paper	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Dex-Net 2.0 Paper: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/raw\/gh-pages\/docs\/d/;"	T	section:Links
Dex-Net 2.0 dataset	docker_files/dexnet_base/dex-net/docs/source/tutorials/generation.rst	/^.. _Dex-Net 2.0 dataset: http:\/\/bit.ly\/2rIM7Jk$/;"	T	chapter:Point Cloud Dataset Generation
Dex-Net 2.0 paper	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Dex-Net 2.0 paper: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/raw\/gh-pages\/docs\/d/;"	T	section:Academic Use
Dex-Net 2.0 paper	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _Dex-Net 2.0 paper: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/raw\/gh-pages\/docs\/d/;"	T	chapter:Dex-Net Object Mesh Dataset v1.1
Dex-Net 2.0: Deep Learning to Plan Robust Grasps with Synthetic Point Clouds and Analytic Grasp Metrics	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <h2 class="header" id="dexnet_2" ><font color="black">Dex-Net 2.0: Deep Learning to Plan R/;"	i
Dex-Net Object Mesh Dataset v1.1	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^Dex-Net Object Mesh Dataset v1.1$/;"	c
Dex-Net Object Mesh Dataset v1.1 	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Dex-Net Object Mesh Dataset v1.1 : http:\/\/bit.ly\/2tLnRrQ$/;"	T	section:Links
Dex-Net Object Mesh Dataset v1.1 	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _Dex-Net Object Mesh Dataset v1.1 : http:\/\/bit.ly\/2tLnRrQ$/;"	T	chapter:Dex-Net Object Mesh Dataset v1.1
Dex-Net Website	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Dex-Net Website: https:\/\/berkeleyautomation.github.io\/dex-net$/;"	T	section:Links
DexNet	docker_files/dexnet_base/dex-net/docs/source/api/api.rst	/^DexNet$/;"	c
DexNet	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^class DexNet(object):$/;"	c
DexNetVisualizer2D	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer2d.py	/^class DexNetVisualizer2D(Visualizer2D):$/;"	c
DexNetVisualizer3D	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^class DexNetVisualizer3D(Visualizer3D):$/;"	c
DexNet_cli	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^class DexNet_cli(object):$/;"	c
Dexterity Network (Dex-Net)	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Dexterity Network (Dex-Net): https:\/\/berkeleyautomation.github.io\/dex-net$/;"	T	section:Academic Use
DifferentiableObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class DifferentiableObjective(Objective):$/;"	c
DiscreteAdaptiveSampler	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class DiscreteAdaptiveSampler(DiscreteSamplingSolver):$/;"	c
DiscreteModel	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class DiscreteModel(Model):$/;"	c
DiscreteSamplingSolver	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^class DiscreteSamplingSolver(SamplingSolver):$/;"	c
DiscreteSelectionPolicy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class DiscreteSelectionPolicy:$/;"	c
Documentation	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^Documentation$/;"	c
Download Link	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^Download Link$/;"	c
Examples	docker_files/dexnet_base/dex-net/docs/source/scripts/examples.rst	/^Examples$/;"	c
FEATURE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^FEATURE_KEY = 'feature'$/;"	v
FIT_DIAG	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    FIT_DIAG = 'diag'$/;"	v	class:RescalingType
FIT_MAX_DIM	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    FIT_MAX_DIM = 'max'$/;"	v	class:RescalingType
FIT_MED_DIM	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    FIT_MED_DIM = 'med'$/;"	v	class:RescalingType
FIT_MIN_DIM	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    FIT_MIN_DIM = 'min'$/;"	v	class:RescalingType
FOCAL_X	ros_nodes/test_camera_node.py	/^    FOCAL_X = 525.$/;"	v	class:PrimesenseSensor
FOCAL_Y	ros_nodes/test_camera_node.py	/^    FOCAL_Y = 525.$/;"	v	class:PrimesenseSensor
FPS	ros_nodes/test_camera_node.py	/^    FPS = 30$/;"	v	class:PrimesenseSensor
GH_PAGES_SOURCES	docker_files/dexnet_base/dex-net/docs/Makefile	/^GH_PAGES_SOURCES = docs src examples tools$/;"	m
GLOBAL_FEATURES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GLOBAL_FEATURES_KEY = 'global_features'$/;"	v
GRASPS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASPS_KEY = 'grasps'$/;"	v
GRASP_CONFIGURATION_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_CONFIGURATION_KEY = 'configuration'$/;"	v
GRASP_FEATURES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_FEATURES_KEY = 'features'$/;"	v
GRASP_FEATURE_NAME_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_FEATURE_NAME_KEY = 'name'$/;"	v
GRASP_FEATURE_TYPE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_FEATURE_TYPE_KEY = 'type'$/;"	v
GRASP_FEATURE_VECTOR_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_FEATURE_VECTOR_KEY = 'vector'$/;"	v
GRASP_ID_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_ID_KEY = 'id'$/;"	v
GRASP_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_KEY = 'grasp'$/;"	v
GRASP_METRICS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_METRICS_KEY = 'metrics'$/;"	v
GRASP_RF_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_RF_KEY = 'frame'$/;"	v
GRASP_TIMESTAMP_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_TIMESTAMP_KEY = 'timestamp'$/;"	v
GRASP_TYPE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRASP_TYPE_KEY = 'type'$/;"	v
GRIPPERS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^GRIPPERS_KEY = 'grippers'$/;"	v
GRIPPER_MESH_FILENAME	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^GRIPPER_MESH_FILENAME = 'gripper.obj'$/;"	v
GRIPPER_NAME	docker_files/dexnet_base/dex-net/test/constants.py	/^GRIPPER_NAME = 'yumi_metal_spline'$/;"	v
GRIPPER_PARAMS_FILENAME	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^GRIPPER_PARAMS_FILENAME = 'params.json'$/;"	v
GaussianBandit	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class GaussianBandit(DiscreteAdaptiveSampler):$/;"	c
GaussianGraspSampler	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^class GaussianGraspSampler(GraspSampler):$/;"	c
GaussianModel	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class GaussianModel(DiscreteModel):$/;"	c
GaussianSnapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class GaussianSnapshot(Snapshot):$/;"	c
GaussianThompsonSampling	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class GaussianThompsonSampling(GaussianBandit):$/;"	c
GaussianUCBPolicy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class GaussianUCBPolicy(DiscreteSelectionPolicy):$/;"	c
GaussianUCBSampling	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class GaussianUCBSampling(GaussianBandit):$/;"	c
GaussianUniformAllocationMean	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class GaussianUniformAllocationMean(GaussianBandit):$/;"	c
Github	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^.. _Github: https:\/\/github.com\/BerkeleyAutomation\/dex-net$/;"	T	section:1. Clone the repository
Github Issues	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Github Issues: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/issues$/;"	T	section:Academic Use
Github Issues	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^.. _Github Issues: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/issues$/;"	T	chapter:Issues
GittinsIndex98	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class GittinsIndex98(BetaBernoulliBandit):$/;"	c
Grasp	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^class Grasp(object):$/;"	c
Grasp Quality Convolutional Neural Networks	docker_files/dexnet_base/dex-net/docs/source/tutorials/generation.rst	/^.. _Grasp Quality Convolutional Neural Networks: https:\/\/berkeleyautomation.github.io\/gqcnn$/;"	T	chapter:Point Cloud Dataset Generation
GraspCollisionChecker	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^class GraspCollisionChecker(OpenRaveCollisionChecker):$/;"	c
GraspInfo	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^class GraspInfo(object):$/;"	c
GraspPlanner	ros_nodes/grasp_plan_node.py	/^class GraspPlanner(object):$/;"	c
GraspQualityConfig	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^class GraspQualityConfig(object):$/;"	c
GraspQualityConfigFactory	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^class GraspQualityConfigFactory:$/;"	c
GraspQualityFunction	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^class GraspQualityFunction(object):$/;"	c
GraspQualityFunctionFactory	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^class GraspQualityFunctionFactory:$/;"	c
GraspQualityResult	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^class GraspQualityResult:$/;"	c
GraspSampler	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^class GraspSampler:$/;"	c
GraspTest	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^class GraspTest(TestCase):$/;"	c
GraspableObject	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^class GraspableObject:$/;"	c
GraspableObject3D	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^class GraspableObject3D(GraspableObject):$/;"	c
GraspableObjectPoseGaussianRV	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^class GraspableObjectPoseGaussianRV(RandomVariable):$/;"	c
HDF5_EXT	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^HDF5_EXT = '.hdf5'$/;"	v
Hdf5Database	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^class Hdf5Database(Database):$/;"	c
Hdf5DatabaseTest	docker_files/dexnet_base/dex-net/test/database_test.py	/^class Hdf5DatabaseTest(TestCase):$/;"	c
Hdf5Dataset	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^class Hdf5Dataset(Dataset):$/;"	c
Hdf5ObjectFactory	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^class Hdf5ObjectFactory(object):$/;"	c
I18NSPHINXOPTS	docker_files/dexnet_base/dex-net/docs/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source$/;"	m
I18NSPHINXOPTS	docker_files/dexnet_base/dex-net/docs/make.bat	/^	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%$/;"	v
I18NSPHINXOPTS	docker_files/dexnet_base/dex-net/docs/make.bat	/^set I18NSPHINXOPTS=%SPHINXOPTS% source$/;"	v
ILLEGAL_DB_NAME	docker_files/dexnet_base/dex-net/test/constants.py	/^ILLEGAL_DB_NAME = 'data\/test\/database\/asdfasdf.asdfas'$/;"	v
IMAGE_DATA_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^IMAGE_DATA_KEY = 'image_data'$/;"	v
IMAGE_FRAME_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^IMAGE_FRAME_KEY = 'image_frame'$/;"	v
IMAGE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^IMAGE_KEY = 'image'$/;"	v
INDEX_FILE	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^INDEX_FILE = 'index.db'$/;"	v
IdentityObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class IdentityObjective(Objective):$/;"	c
ImageBufferResponse	ros_nodes/test_camera_node.py	/^    ImageBufferResponse = rospy.numpy_msg.numpy_msg(ImageBufferResponse)$/;"	v
Indices and tables	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Indices and tables$/;"	c
Installation	docker_files/dexnet_base/dex-net/README.md	/^## Installation$/;"	s
Installation Instructions	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^Installation Instructions$/;"	c
Issues	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^Issues$/;"	c
Jeff Mahler	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Jeff Mahler: https:\/\/www.jeff-mahler.com$/;"	T	section:Development
KIT Object Database	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _KIT Object Database: https:\/\/h2t-projects.webarchiv.kit.edu\/Projects\/ObjectModelsWebUI\/$/;"	T	section:Academic Use
KIT Object Database	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _KIT Object Database: https:\/\/h2t-projects.webarchiv.kit.edu\/Projects\/ObjectModelsWebUI\/$/;"	T	chapter:Dex-Net Object Mesh Dataset v1.1
KIT Object Database	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _KIT Object Database: https:\/\/h2t-projects.webarchiv.kit.edu\/Projects\/ObjectModelsWebUI\/$/;"	T	chapter:License
LOCAL_FEATURES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^LOCAL_FEATURES_KEY = 'local_features'$/;"	v
LOCAL_FEATURE_DESC_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^LOCAL_FEATURE_DESC_KEY = 'descriptors'$/;"	v
LOCAL_FEATURE_NORMAL_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^LOCAL_FEATURE_NORMAL_KEY = 'normals'$/;"	v
LOCAL_FEATURE_NUM_FEAT_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^LOCAL_FEATURE_NUM_FEAT_KEY = 'num_features'$/;"	v
LOCAL_FEATURE_POINT_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^LOCAL_FEATURE_POINT_KEY = 'points'$/;"	v
LOCAL_FEATURE_RF_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^LOCAL_FEATURE_RF_KEY = 'rfs'$/;"	v
LearningTest	docker_files/dexnet_base/dex-net/test/learning_test.py	/^class LearningTest(TestCase):$/;"	c
LeastSquaresObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class LeastSquaresObjective(DifferentiableObjective):$/;"	c
License	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^License$/;"	c
Links	docker_files/dexnet_base/dex-net/README.md	/^## Links$/;"	s
Links	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Links$/;"	s	chapter:Berkeley AUTOLAB's Dex-Net Package
LogisticCrossEntropyObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class LogisticCrossEntropyObjective(DifferentiableObjective):$/;"	c
MASS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MASS_KEY = 'mass'$/;"	v
MAX_ITERS	docker_files/dexnet_base/dex-net/test/constants.py	/^MAX_ITERS = 10000$/;"	v
MAX_QUEUE_SIZE	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^MAX_QUEUE_SIZE = 1000$/;"	v
MESH_DENSITY_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_DENSITY_KEY = 'density'$/;"	v
MESH_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_KEY = 'mesh'$/;"	v
MESH_NORMALS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_NORMALS_KEY = 'normals'$/;"	v
MESH_POSE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_POSE_KEY = 'pose'$/;"	v
MESH_SCALE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_SCALE_KEY = 'scale'$/;"	v
MESH_TRIANGLES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_TRIANGLES_KEY = 'triangles'$/;"	v
MESH_VERTICES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^MESH_VERTICES_KEY = 'vertices'$/;"	v
METADATA_DESC_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^METADATA_DESC_KEY = 'description'$/;"	v
METADATA_FUNC_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^METADATA_FUNC_KEY = 'func'$/;"	v
METADATA_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^METADATA_KEY = 'metadata'$/;"	v
METADATA_TYPE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^METADATA_TYPE_KEY = 'type'$/;"	v
METRICS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^METRICS_KEY = 'metrics'$/;"	v
MaxDiscreteSelectionPolicy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class MaxDiscreteSelectionPolicy(DiscreteSelectionPolicy):$/;"	c
MaxIterTerminationCondition	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^class MaxIterTerminationCondition(TerminationCondition):$/;"	c
MaximizationObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class MaximizationObjective(DifferentiableObjective):$/;"	c
MeshProcessor	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^class MeshProcessor:$/;"	c
MinimizationObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class MinimizationObjective(DifferentiableObjective):$/;"	c
Model	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class Model:$/;"	c
Models	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^        <h2 class="header">Models<\/h2>$/;"	i
NONE	ros_nodes/test_camera_node.py	/^    NONE = 0$/;"	v	class:PrimesenseRegistrationMode
NO_CONTACT_DIST	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^NO_CONTACT_DIST = 0.2 # distance to points that are not in contact for window extraction$/;"	v
NUM_CANDIDATES	docker_files/dexnet_base/dex-net/test/constants.py	/^NUM_CANDIDATES = 100$/;"	v
NUM_DB_GRASPS	docker_files/dexnet_base/dex-net/test/constants.py	/^NUM_DB_GRASPS = 10$/;"	v
NUM_GRASPS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^NUM_GRASPS_KEY = 'num_grasps'$/;"	v
NUM_IMAGES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^NUM_IMAGES_KEY = 'num_images'$/;"	v
NUM_STP_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^NUM_STP_KEY = 'num_stable_poses'$/;"	v
NUM_TEST_CASES	docker_files/dexnet_base/dex-net/test/constants.py	/^NUM_TEST_CASES = 100$/;"	v
News Coverage	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <h2 class="header" id="links" ><font color="black">News Coverage<\/font><\/h2>$/;"	i
NonDeterministicObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class NonDeterministicObjective(Objective):$/;"	c
OBJECTS_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^OBJECTS_KEY = 'objects'$/;"	v
OBJ_EXT	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^OBJ_EXT = '.obj'$/;"	v
OBJ_FILENAME	docker_files/dexnet_base/dex-net/test/constants.py	/^OBJ_FILENAME = 'data\/test\/models\/bar_clamp.obj'$/;"	v
OFF_EXT	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^OFF_EXT = '.off'$/;"	v
OPENNI2_PATH	ros_nodes/test_camera_node.py	/^    OPENNI2_PATH = '\/home\/autolab\/Libraries\/OpenNI-Linux-x64-2.2\/Redist'$/;"	v	class:PrimesenseSensor
Objective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class Objective:$/;"	c
OpenRaveCollisionChecker	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^class OpenRaveCollisionChecker(object):$/;"	c
OptimizationSolver	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^class OptimizationSolver(Solver):$/;"	c
OrTerminationCondition	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^class OrTerminationCondition(TerminationCondition):$/;"	c
Overview	docker_files/dexnet_base/dex-net/README.md	/^## Overview$/;"	s
Overview	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Overview$/;"	s	chapter:Berkeley AUTOLAB's Dex-Net Package
Overview	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <a class="anchor" haria-hidden="true"><span class="octicon octicon-link"><\/span><\/a>Over/;"	j
Overview	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <a id="abstract" class="anchor" href="#abstract" aria-hidden="true"><span class="octicon o/;"	j
Overview	docker_files/dexnet_base/dex-net/docs/source/tutorials/tutorial.rst	/^Overview$/;"	c
PAPER	docker_files/dexnet_base/dex-net/docs/Makefile	/^PAPER         =$/;"	m
PAPER	docker_files/dexnet_base/dex-net/docs/make.bat	/^	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter$/;"	v
PAPEROPT_a4	docker_files/dexnet_base/dex-net/docs/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	docker_files/dexnet_base/dex-net/docs/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
POSE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^POSE_KEY = 'pose'$/;"	v
PROC_TAG	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^PROC_TAG = '_proc'$/;"	v
Parallel-Jaw Grippers	docker_files/dexnet_base/dex-net/README.md	/^## Parallel-Jaw Grippers$/;"	s
ParallelJawGraspPoseGaussianRV	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^class ParallelJawGraspPoseGaussianRV(RandomVariable):$/;"	c
ParallelJawPtGrasp3D	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^class ParallelJawPtGrasp3D(PointGrasp):$/;"	c
ParamsGaussianRV	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^class ParamsGaussianRV(RandomVariable):$/;"	c
Point Cloud Dataset Generation	docker_files/dexnet_base/dex-net/docs/source/tutorials/generation.rst	/^Point Cloud Dataset Generation$/;"	c
PointGrasp	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^class PointGrasp(Grasp):$/;"	c
PointGraspMetrics3D	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^class PointGraspMetrics3D:$/;"	c
PrimesenseRegistrationMode	ros_nodes/test_camera_node.py	/^class PrimesenseRegistrationMode:$/;"	c
PrimesenseSensor	ros_nodes/test_camera_node.py	/^class PrimesenseSensor(CameraSensor):$/;"	c
PrimesenseSensor_ROS	ros_nodes/test_camera_node.py	/^class PrimesenseSensor_ROS(PrimesenseSensor):$/;"	c
ProgressTerminationCondition	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^class ProgressTerminationCondition(TerminationCondition):$/;"	c
Project Goals	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^Project Goals$/;"	s	chapter:Berkeley AUTOLAB's Dex-Net Package
Project Links	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <h2 class="header" id="links" ><font color="black">Project Links<\/font><\/h2>$/;"	i
Publications	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^        <h2 class="header">Publications<\/h2>$/;"	i
QuasiStaticGraspQualityConfig	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^class QuasiStaticGraspQualityConfig(GraspQualityConfig):$/;"	c
QuasiStaticGraspQualityRV	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^class QuasiStaticGraspQualityRV(rvs.RandomVariable):$/;"	c
QuasiStaticQualityFunction	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^class QuasiStaticQualityFunction(GraspQualityFunction):$/;"	c
READ_ONLY_ACCESS	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^READ_ONLY_ACCESS = 'READ_ONLY'$/;"	v
READ_WRITE_ACCESS	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^READ_WRITE_ACCESS = 'READ_WRITE'$/;"	v
RELATIVE	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    RELATIVE = 'relative'$/;"	v	class:RescalingType
RENDERED_IMAGES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^RENDERED_IMAGES_KEY = 'rendered_images'$/;"	v
RENDERED_IMAGE_TYPES	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^RENDERED_IMAGE_TYPES = ['segmask', 'depth', 'scaled_depth']$/;"	v
REQUIRED_KEYS	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    REQUIRED_KEYS = ['quality_method',$/;"	v	class:QuasiStaticGraspQualityConfig
RE_SPACE	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^RE_SPACE = re.compile('.*\\s+$', re.M)$/;"	v
ROBUST_REQUIRED_KEYS	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    ROBUST_REQUIRED_KEYS = ['num_quality_samples']$/;"	v	class:RobustQuasiStaticGraspQualityConfig
RandomBinaryObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class RandomBinaryObjective(NonDeterministicObjective):$/;"	c
RandomContinuousObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class RandomContinuousObjective(NonDeterministicObjective):$/;"	c
RegressionResult	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^class RegressionResult(object):$/;"	c
RescalingType	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^class RescalingType:$/;"	c
RobotGripper	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^class RobotGripper(object):$/;"	c
RobustPointGraspMetrics3D	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^class RobustPointGraspMetrics3D:$/;"	c
RobustQuasiStaticGraspQualityConfig	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^class RobustQuasiStaticGraspQualityConfig(GraspQualityConfig):$/;"	c
RobustQuasiStaticQualityFunction	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^class RobustQuasiStaticQualityFunction(GraspQualityFunction):$/;"	c
Running Python Scripts	docker_files/dexnet_base/dex-net/docs/source/tutorials/tutorial.rst	/^Running Python Scripts$/;"	s	chapter:Overview
SDF_DATA_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_DATA_KEY = 'data'$/;"	v
SDF_EXT	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^SDF_EXT = '.sdf'$/;"	v
SDF_FILENAME	docker_files/dexnet_base/dex-net/test/constants.py	/^SDF_FILENAME = 'data\/test\/models\/bar_clamp.sdf'$/;"	v
SDF_FRAME_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_FRAME_KEY = 'frame'$/;"	v
SDF_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_KEY = 'sdf'$/;"	v
SDF_ORIGIN_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_ORIGIN_KEY = 'origin'$/;"	v
SDF_POSE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_POSE_KEY = 'pose'$/;"	v
SDF_RES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_RES_KEY = 'resolution'$/;"	v
SDF_SCALE_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SDF_SCALE_KEY = 'scale'$/;"	v
SEED	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^SEED = 197561$/;"	v
SENSOR_DATA_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SENSOR_DATA_KEY = 'sensor_data'$/;"	v
SGDOptimizer	train_network/model_fbbnqxtnbe/training_script.py	/^SGDOptimizer = SGDOptimizer(gqcnn, train_config)$/;"	v
SGDOptimizer	train_network/train_net.py	/^SGDOptimizer = SGDOptimizer(gqcnn, train_config)$/;"	v
SHOT_FEATURES_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^SHOT_FEATURES_KEY = 'shot'$/;"	v
SNAPSHOT_RATE	docker_files/dexnet_base/dex-net/test/constants.py	/^SNAPSHOT_RATE = 1000$/;"	v
SPHINXBUILD	docker_files/dexnet_base/dex-net/docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXBUILD	docker_files/dexnet_base/dex-net/docs/make.bat	/^	set SPHINXBUILD=sphinx-build$/;"	v
SPHINXBUILD	docker_files/dexnet_base/dex-net/docs/make.bat	/^set SPHINXBUILD=python -m sphinx.__init__$/;"	v
SPHINXOPTS	docker_files/dexnet_base/dex-net/docs/Makefile	/^SPHINXOPTS    =$/;"	m
STABLE_POSE_PROB_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^STABLE_POSE_PROB_KEY = 'p'$/;"	v
STABLE_POSE_PT_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^STABLE_POSE_PT_KEY = 'x0'$/;"	v
STABLE_POSE_ROT_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^STABLE_POSE_ROT_KEY = 'r'$/;"	v
STL_EXT	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^STL_EXT = '.stl'$/;"	v
STP_KEY	docker_files/dexnet_base/dex-net/src/dexnet/database/keys.py	/^STP_KEY = 'stable_poses'$/;"	v
SUPPORTED_MESH_FORMATS	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^SUPPORTED_MESH_FORMATS = ['.obj', '.off', '.wrl', '.stl']$/;"	v
SamplingSolver	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^class SamplingSolver(TopKSolver):$/;"	c
Snapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^class Snapshot:$/;"	c
Solver	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^class Solver:$/;"	c
Source Code	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _Source Code: https:\/\/github.com\/BerkeleyAutomation\/dex-net$/;"	T	section:Links
SquaredErrorLoss	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class SquaredErrorLoss(Objective):$/;"	c
Support or Contact	docker_files/dexnet_base/dex-net/docs/source/static_content/index.html	/^      <a id="support-or-contact" class="anchor" href="#support-or-contact" aria-hidden="true"><s/;"	j
Support or Contact	docker_files/dexnet_base/dex-net/docs/source/static_content/index.md	/^### Support or Contact$/;"	S
SurfaceWindow	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^class SurfaceWindow:$/;"	c
System Requirements	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^System Requirements$/;"	s	chapter:Berkeley AUTOLAB's Dex-Net Package
TENSOR_EXT	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^TENSOR_EXT = '.npy'$/;"	v
TEST_CONFIG_NAME	docker_files/dexnet_base/dex-net/test/constants.py	/^TEST_CONFIG_NAME = 'test\/config.yaml'$/;"	v
TEST_DB_DIR	docker_files/dexnet_base/dex-net/test/constants.py	/^TEST_DB_DIR = 'data\/test\/database'$/;"	v
TEST_DB_NAME	docker_files/dexnet_base/dex-net/test/constants.py	/^TEST_DB_NAME = 'data\/test\/database\/test.hdf5'$/;"	v
TEST_DS_NAME	docker_files/dexnet_base/dex-net/test/constants.py	/^TEST_DS_NAME = 'test'$/;"	v
T_GRASP_GRIPPER_FILENAME	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^T_GRASP_GRIPPER_FILENAME = 'T_grasp_gripper.tf' $/;"	v
T_MESH_GRIPPER_FILENAME	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^T_MESH_GRIPPER_FILENAME = 'T_mesh_gripper.tf' $/;"	v
T_camera_robot	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    T_camera_robot = RigidTransform(rotation=RigidTransform.random_rotation(),$/;"	v
T_grasp_obj	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def T_grasp_obj(self):$/;"	m	class:ParallelJawPtGrasp3D
T_gripper_obj	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    T_gripper_obj = most_robust_grasp.gripper_pose(gripper)$/;"	v
T_gripper_robot	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    T_gripper_robot = T_camera_robot * T_obj_camera * T_gripper_obj$/;"	v
T_obj_camera	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    T_obj_camera = RigidTransform(rotation=RigidTransform.random_rotation(),$/;"	v
Tensor	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^class Tensor(object):$/;"	c
TensorDatapoint	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^class TensorDatapoint(object):$/;"	c
TensorDataset	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^class TensorDataset(object):$/;"	c
TerminationCondition	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^class TerminationCondition:$/;"	c
ThompsonSampling	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class ThompsonSampling(BetaBernoulliBandit):$/;"	c
ThompsonSelectionPolicy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class ThompsonSelectionPolicy(DiscreteSelectionPolicy):$/;"	c
Tools	docker_files/dexnet_base/dex-net/docs/source/scripts/tools.rst	/^Tools$/;"	c
TopKSolver	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^class TopKSolver(Solver):$/;"	c
UC Berkeley AUTOLAB	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _UC Berkeley AUTOLAB: http:\/\/autolab.berkeley.edu$/;"	T	section:Links
URDF_EXT	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^URDF_EXT = '.urdf'$/;"	v
USE_OPENRAVE	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    USE_OPENRAVE = False$/;"	v
USE_OPENRAVE	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^USE_OPENRAVE = True$/;"	v
USE_OPENRAVE	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    USE_OPENRAVE = False$/;"	v
USE_OPENRAVE	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^USE_OPENRAVE = True$/;"	v
UniformAllocationMean	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^class UniformAllocationMean(BetaBernoulliBandit):$/;"	c
UniformGraspSampler	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^class UniformGraspSampler(GraspSampler):$/;"	c
UniformSelectionPolicy	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^class UniformSelectionPolicy(DiscreteSelectionPolicy):$/;"	c
Updates	docker_files/dexnet_base/dex-net/README.md	/^## Updates$/;"	s
Usage	docker_files/dexnet_base/dex-net/README.md	/^## Usage$/;"	s
VacuumPoint	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^class VacuumPoint(Grasp):$/;"	c
WIN_DIST_LIM	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^WIN_DIST_LIM = 0.02 # limits for window plotting$/;"	v
WRITE_ACCESS	docker_files/dexnet_base/dex-net/src/dexnet/constants.py	/^WRITE_ACCESS = 'WRITE'$/;"	v
WeightedSquaredErrorLoss	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class WeightedSquaredErrorLoss(Objective):$/;"	c
Welcome to GitHub Pages.	docker_files/dexnet_base/dex-net/docs/source/static_content/index.md	/^### Welcome to GitHub Pages.$/;"	S
ZeroOneObjective	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^class ZeroOneObjective(Objective):$/;"	c
__all__	docker_files/dexnet_base/dex-net/src/dexnet/database/__init__.py	/^__all__ = ['Database', 'Hdf5Database', 'Dataset', 'Hdf5Dataset', 'Hdf5ObjectFactory',$/;"	v
__all__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/__init__.py	/^__all__ = ['Contact3D', 'GraspableObject', 'GraspableObject3D', 'ParallelJawPtGrasp3D',$/;"	v
__all__	docker_files/dexnet_base/dex-net/src/dexnet/learning/__init__.py	/^__all__ = ['Model', 'DiscreteModel', 'Snapshot', 'BernoulliSnapshot', 'BetaBernoulliSnapshot', '/;"	v
__all__	docker_files/dexnet_base/dex-net/src/dexnet/visualization/__init__.py	/^__all__ = ['DexNetVisualizer2D', 'DexNetVisualizer3D']$/;"	v
__call__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def __call__(self, grasp):$/;"	m	class:GraspQualityFunction
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __call__(self, x):$/;"	m	class:Model
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __call__(self, x):$/;"	m	class:Objective
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __call__(self, k, cur_val = None, prev_val = None, cur_grad = None, cur_hess = None, mod/;"	m	class:TerminationCondition
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __call__(self, k, cur_val, prev_val, cur_grad = None, cur_hess = None, model = None):$/;"	m	class:AndTerminationCondition
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __call__(self, k, cur_val, prev_val, cur_grad = None, cur_hess = None, model = None):$/;"	m	class:ConfidenceTerminationCondition
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __call__(self, k, cur_val, prev_val, cur_grad = None, cur_hess = None, model = None):$/;"	m	class:MaxIterTerminationCondition
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __call__(self, k, cur_val, prev_val, cur_grad = None, cur_hess = None, model = None):$/;"	m	class:OrTerminationCondition
__call__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __call__(self, k, cur_val, prev_val, cur_grad = None, cur_hess = None, model = None):$/;"	m	class:ProgressTerminationCondition
__copy__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __copy__(self):$/;"	m	class:QuasiStaticGraspQualityConfig
__copy__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __copy__(self):$/;"	m	class:RobustQuasiStaticGraspQualityConfig
__del__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def __del__(self):$/;"	m	class:OpenRaveCollisionChecker
__del__	ros_nodes/test_camera_node.py	/^    def __del__(self):$/;"	m	class:PrimesenseSensor
__getattr__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __getattr__(self, key):$/;"	m	class:GraspQualityConfig
__getitem__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def __getitem__(self, dataset_name):$/;"	m	class:Hdf5Database
__getitem__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def __getitem__(self, index):$/;"	m	class:Hdf5Dataset
__getitem__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __getitem__(self, key):$/;"	m	class:GraspQualityConfig
__getitem__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __getitem__(self, ind):$/;"	m	class:TensorDataset
__getitem__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __getitem__(self, name):$/;"	m	class:TensorDatapoint
__init__	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def __init__(self):$/;"	m	class:DexNet_cli
__init__	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def __init__(self, commands=[]):$/;"	m	class:Completer
__init__	docker_files/dexnet_base/dex-net/src/dexnet/abstractstatic.py	/^    def __init__(self, function):$/;"	m	class:abstractstatic
__init__	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def __init__(self):$/;"	m	class:DexNet
__init__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def __init__(self, access_level=READ_ONLY_ACCESS):$/;"	m	class:Database
__init__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def __init__(self, database_filename, access_level=READ_ONLY_ACCESS,$/;"	m	class:Hdf5Database
__init__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def __init__(self, dataset_name, data, cache_dir=None,$/;"	m	class:Hdf5Dataset
__init__	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def __init__(self, filename, cache_dir):$/;"	m	class:MeshProcessor
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def __init__(self, env=None, view=False, win_height=1200, win_width=1200, cam_dist=0.5):$/;"	m	class:OpenRaveCollisionChecker
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def __init__(self, gripper, env=None, view=False, win_height=1200, win_width=1200, cam_dist=/;"	m	class:GraspCollisionChecker
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def __init__(self, graspable, contact_point, in_direction=None):$/;"	m	class:Contact3D
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def __init__(self, proj_win, grad, hess_x, hess_y, gauss_curvature):$/;"	m	class:SurfaceWindow
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def __init__(self, configuration, frame='object', grasp_id=None):$/;"	m	class:ParallelJawPtGrasp3D
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def __init__(self, configuration, frame='object', grasp_id=None):$/;"	m	class:VacuumPoint
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __init__(self, config):$/;"	m	class:GraspQualityConfig
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __init__(self, config):$/;"	m	class:QuasiStaticGraspQualityConfig
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def __init__(self, config):$/;"	m	class:RobustQuasiStaticGraspQualityConfig
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def __init__(self, graspable, quality_config):$/;"	m	class:GraspQualityFunction
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def __init__(self, graspable, quality_config):$/;"	m	class:QuasiStaticQualityFunction
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def __init__(self, graspable, quality_config, T_obj_world=RigidTransform(from_frame='obj', t/;"	m	class:RobustQuasiStaticQualityFunction
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def __init__(self, quality, uncertainty=0.0, quality_config=None):$/;"	m	class:GraspQualityResult
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def __init__(self, gripper, config):$/;"	m	class:GraspSampler
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def __init__(self, sdf, mesh, key='', model_name='', mass=1.0, convex_pieces=None):$/;"	m	class:GraspableObject
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def __init__(self, sdf, mesh, key='',$/;"	m	class:GraspableObject3D
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^    def __init__(self, name, mesh, mesh_filename, params, T_mesh_gripper, T_grasp_gripper):$/;"	m	class:RobotGripper
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def __init__(self, grasp, config):$/;"	m	class:ParallelJawGraspPoseGaussianRV
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def __init__(self, obj, mean_T_obj_world, config):$/;"	m	class:GraspableObjectPoseGaussianRV
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def __init__(self, params, u_config):$/;"	m	class:ParamsGaussianRV
__init__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^    def __init__(self, grasp_rv, obj_rv, params_rv, quality_config):$/;"	m	class:QuasiStaticGraspQualityRV
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def __init__(self, num_categories):$/;"	m	class:ConfusionMatrix
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def __init__(self, pred_probs_list, labels_list):$/;"	m	class:ClassificationResult
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def __init__(self, predictions_list, labels_list):$/;"	m	class:RegressionResult
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, best_candidates, best_pred_means, best_pred_vars, total_time, checkpt_tim/;"	m	class:AdaptiveSamplingResult
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates):$/;"	m	class:GaussianThompsonSampling
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates):$/;"	m	class:GaussianUCBSampling
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates):$/;"	m	class:GaussianUniformAllocationMean
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, alpha_prior = 1.0, beta_prior = 1.0):$/;"	m	class:GittinsIndex98
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, alpha_prior = 1.0, beta_prior = 1.0):$/;"	m	class:ThompsonSampling
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, alpha_prior = 1.0, beta_prior = 1.0):$/;"	m	class:UniformAllocationMean
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, model, selection_policy):$/;"	m	class:DiscreteAdaptiveSampler
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, nn, kernel, tolerance=1e-4,$/;"	m	class:CorrelatedBayesUCB
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, nn, kernel, tolerance=1e-4,$/;"	m	class:CorrelatedGittins
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, nn, kernel,$/;"	m	class:CorrelatedThompsonSampling
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, policy):$/;"	m	class:GaussianBandit
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, policy, alpha_prior = 1.0, beta_prior = 1.0):$/;"	m	class:BetaBernoulliBandit
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def __init__(self, objective, candidates, policy, nn, kernel, tolerance=1e-4, alpha_prior=1./;"	m	class:CorrelatedBetaBernoulliBandit
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def __init__(self, beta=1.0):$/;"	m	class:GaussianUCBPolicy
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def __init__(self, horizon=1000, c=6, model=None):$/;"	m	class:BetaBernoulliBayesUCBPolicy
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def __init__(self, model = None):$/;"	m	class:BetaBernoulliGittinsIndex98Policy
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def __init__(self, model = None):$/;"	m	class:DiscreteSelectionPolicy
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, best_pred_ind, alphas, betas, num_obs):$/;"	m	class:BetaBernoulliSnapshot
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, best_pred_ind, means, num_obs):$/;"	m	class:BernoulliSnapshot
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, best_pred_ind, means, variances, sample_vars, num_obs):$/;"	m	class:GaussianSnapshot
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, best_pred_ind, num_obs):$/;"	m	class:Snapshot
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, candidates, nn, kernel, tolerance=1e-2,$/;"	m	class:CorrelatedBetaBernoulliModel
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, num_vars):$/;"	m	class:GaussianModel
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, num_vars, alpha_prior = 1., beta_prior = 1.):$/;"	m	class:BetaBernoulliModel
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def __init__(self, num_vars, mean_prior = 0.5):$/;"	m	class:BernoulliModel
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self):$/;"	m	class:RandomBinaryObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self):$/;"	m	class:RandomContinuousObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, A, b):$/;"	m	class:LeastSquaresObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, X, y):$/;"	m	class:LogisticCrossEntropyObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, b = 0):$/;"	m	class:ZeroOneObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, det_objective):$/;"	m	class:NonDeterministicObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, obj):$/;"	m	class:MaximizationObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, obj):$/;"	m	class:MinimizationObjective
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, true_p):$/;"	m	class:CCBPLogLikelihood
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, true_p):$/;"	m	class:CrossEntropyLoss
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, true_p):$/;"	m	class:SquaredErrorLoss
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def __init__(self, true_p):$/;"	m	class:WeightedSquaredErrorLoss
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def __init__(self, objective):$/;"	m	class:Solver
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def __init__(self, objective):$/;"	m	class:TopKSolver
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def __init__(self, objective, candidates):$/;"	m	class:DiscreteSamplingSolver
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def __init__(self, objective, ineq_constraints = None, eq_constraints = None, eps_i = 1e-2, /;"	m	class:OptimizationSolver
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __init__(self, field_names):$/;"	m	class:TensorDatapoint
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __init__(self, filename, config, access_mode=WRITE_ACCESS):$/;"	m	class:TensorDataset
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __init__(self, shape, dtype=np.float32):$/;"	m	class:Tensor
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __init__(self, eps):$/;"	m	class:ConfidenceTerminationCondition
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __init__(self, eps):$/;"	m	class:ProgressTerminationCondition
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __init__(self, max_iters):$/;"	m	class:MaxIterTerminationCondition
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __init__(self, term_conditions):$/;"	m	class:AndTerminationCondition
__init__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    def __init__(self, term_conditions):$/;"	m	class:OrTerminationCondition
__init__	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    def __init__(self, grasp, collision_free, phi=0.0):$/;"	m	class:GraspInfo
__init__	ros_nodes/grasp_plan_node.py	/^    def __init__(self, cfg, cv_bridge, grasping_policy, grasp_pose_publisher):$/;"	m	class:GraspPlanner
__init__	ros_nodes/test_camera_node.py	/^    def __init__(self, depth_image_buffer= None, depth_absolute=False, color_image_buffer=None, /;"	m	class:PrimesenseSensor_ROS
__init__	ros_nodes/test_camera_node.py	/^    def __init__(self, registration_mode=PrimesenseRegistrationMode.DEPTH_TO_COLOR,$/;"	m	class:PrimesenseSensor
__isabstractmethod__	docker_files/dexnet_base/dex-net/src/dexnet/abstractstatic.py	/^    __isabstractmethod__ = True$/;"	v	class:abstractstatic	file:
__iter__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def __iter__(self):$/;"	m	class:Hdf5Dataset
__iter__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __iter__(self):$/;"	m	class:TensorDataset
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Database	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Contact	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Grasp	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    __metaclass__ = ABCMeta$/;"	v	class:PointGrasp	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    __metaclass__ = ABCMeta$/;"	v	class:GraspQualityConfig	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    __metaclass__ = ABCMeta$/;"	v	class:GraspQualityFunction	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    __metaclass__ = ABCMeta$/;"	v	class:GraspSampler	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    __metaclass__ = ABCMeta$/;"	v	class:GraspableObject	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    __metaclass__ = ABCMeta$/;"	v	class:DiscreteAdaptiveSampler	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    __metaclass__ = ABCMeta$/;"	v	class:DiscreteSelectionPolicy	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Model	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Snapshot	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    __metaclass__ = ABCMeta$/;"	v	class:DifferentiableObjective	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Objective	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    __metaclass__ = ABCMeta$/;"	v	class:DiscreteSamplingSolver	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    __metaclass__ = ABCMeta$/;"	v	class:SamplingSolver	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Solver	file:
__metaclass__	docker_files/dexnet_base/dex-net/src/dexnet/learning/termination_conditions.py	/^    __metaclass__ = ABCMeta$/;"	v	class:TerminationCondition	file:
__setitem__	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def __setitem__(self, name, value):$/;"	m	class:TensorDatapoint
__slots__	docker_files/dexnet_base/dex-net/src/dexnet/abstractstatic.py	/^    __slots__ = ()$/;"	v	class:abstractstatic	file:
_allocate_tensors	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def _allocate_tensors(self):$/;"	m	class:TensorDataset
_angle_aligned_with_stable_pose	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def _angle_aligned_with_stable_pose(self, stable_pose):$/;"	m	class:ParallelJawPtGrasp3D
_angle_aligned_with_table	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def _angle_aligned_with_table(self, table_normal):$/;"	m	class:ParallelJawPtGrasp3D
_argmax	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^        def _argmax(f, a, b, n):$/;"	f	member:ParallelJawPtGrasp3D._angle_aligned_with_table	file:
_argmin	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^        def _argmin(f, a, b, n):$/;"	f	member:ParallelJawPtGrasp3D._angle_aligned_with_stable_pose	file:
_attach_metadata	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _attach_metadata(self):$/;"	m	class:DexNet
_check_opens	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def _check_opens(self):$/;"	m	class:DexNet_cli
_check_opens	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _check_opens(self):$/;"	m	class:DexNet
_clean_mesh	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _clean_mesh(self, scale, rescaling_type, use_uniform_com, rescale_mesh=False):$/;"	m	class:MeshProcessor
_complete_path	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def _complete_path(self, path=None):$/;"	m	class:Completer
_compute_normal	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def _compute_normal(self):$/;"	m	class:Contact3D
_compute_surface_window_projection	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def _compute_surface_window_projection(self, u1=None, u2=None, width=1e-2,$/;"	m	class:Contact3D
_configure	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def _configure(self, config):$/;"	m	class:GraspSampler
_create_new_db	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def _create_new_db(self):$/;"	m	class:Hdf5Database
_deep_update_config	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _deep_update_config(config, updates):$/;"	m	class:DexNet
_generate_sdf	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _generate_sdf(self, path_to_sdfgen, dim, padding):$/;"	m	class:MeshProcessor
_generate_stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _generate_stable_poses(self, min_prob = 0.05):$/;"	m	class:MeshProcessor
_get_checked_input	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def _get_checked_input(self, validity_check_fn, what_to_get):$/;"	m	class:DexNet_cli
_get_config	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _get_config(self, updates=None):$/;"	m	class:DexNet
_get_fixed_input	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def _get_fixed_input(self, valid_inputs, what_to_get):$/;"	m	class:DexNet_cli
_get_matrix_product_x_axis	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^        def _get_matrix_product_x_axis(grasp_axis, normal):$/;"	f	member:ParallelJawPtGrasp3D._angle_aligned_with_stable_pose	file:
_get_matrix_product_x_axis	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^        def _get_matrix_product_x_axis(grasp_axis, normal):$/;"	f	member:ParallelJawPtGrasp3D._angle_aligned_with_table	file:
_get_rotation_matrix_y	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def _get_rotation_matrix_y(theta):$/;"	m	class:ParallelJawPtGrasp3D
_get_yn_input	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def _get_yn_input(self, question):$/;"	m	class:DexNet_cli
_init_model_params	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def _init_model_params(self):$/;"	m	class:BernoulliModel
_init_model_params	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def _init_model_params(self):$/;"	m	class:BetaBernoulliModel
_init_model_params	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def _init_model_params(self):$/;"	m	class:GaussianModel
_init_viewer	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def _init_viewer(self, height, width, cam_dist):$/;"	m	class:OpenRaveCollisionChecker
_listdir	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def _listdir(self, root):$/;"	m	class:Completer
_load_database	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def _load_database(self):$/;"	m	class:Hdf5Database
_load_datasets	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def _load_datasets(self):$/;"	m	class:Hdf5Database
_load_mesh	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _load_mesh(self, script_to_apply=None):$/;"	m	class:MeshProcessor
_meshpy_to_trimesh	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _meshpy_to_trimesh(mesh_m3d):$/;"	m	class:DexNet
_mu	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def _mu(self, X, beta):$/;"	m	class:LogisticCrossEntropyObjective
_parse_config	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def _parse_config(self, config):$/;"	m	class:GraspableObjectPoseGaussianRV
_parse_config	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def _parse_config(self, config):$/;"	m	class:ParallelJawGraspPoseGaussianRV
_parse_config	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def _parse_config(self, sigma_params):$/;"	m	class:ParamsGaussianRV
_read_color_image	ros_nodes/test_camera_node.py	/^    def _read_color_image(self):$/;"	m	class:PrimesenseSensor
_read_color_image	ros_nodes/test_camera_node.py	/^    def _read_color_image(self):$/;"	m	class:PrimesenseSensor_ROS
_read_color_images	ros_nodes/test_camera_node.py	/^    def _read_color_images(self, num_images):$/;"	m	class:PrimesenseSensor_ROS
_read_depth_image	ros_nodes/test_camera_node.py	/^    def _read_depth_image(self):$/;"	m	class:PrimesenseSensor
_read_depth_image	ros_nodes/test_camera_node.py	/^    def _read_depth_image(self):$/;"	m	class:PrimesenseSensor_ROS
_read_depth_images	ros_nodes/test_camera_node.py	/^    def _read_depth_images(self, num_images):$/;"	m	class:PrimesenseSensor_ROS
_remove_bad_tris	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _remove_bad_tris(self):$/;"	m	class:MeshProcessor
_remove_unreferenced_vertices	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _remove_unreferenced_vertices(self):$/;"	m	class:MeshProcessor
_rescale_vertices	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _rescale_vertices(self, scale, rescaling_type=RescalingType.FIT_MIN_DIM, use_uniform_com/;"	m	class:MeshProcessor
_ros_read_images	ros_nodes/test_camera_node.py	/^    def _ros_read_images(self, stream_buffer, number, staleness_limit = 10.):$/;"	m	class:PrimesenseSensor_ROS
_setup	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def _setup(self):$/;"	m	class:GraspQualityFunction
_setup	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def _setup(self):$/;"	m	class:QuasiStaticQualityFunction
_setup	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def _setup(self):$/;"	m	class:RobustQuasiStaticQualityFunction
_setup_rave_env	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def _setup_rave_env():$/;"	m	class:OpenRaveCollisionChecker
_single_obj_grasps	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _single_obj_grasps(dataset, obj, gripper, config, stable_pose_id=None):$/;"	m	class:DexNet
_standardize_pose	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def _standardize_pose(self):$/;"	m	class:MeshProcessor
_tf_to_rave_mat	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def _tf_to_rave_mat(tf):$/;"	m	class:OpenRaveCollisionChecker
_trimesh_to_meshpy	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def _trimesh_to_meshpy(mesh_tm):$/;"	m	class:DexNet
a	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a {$/;"	s
a	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
a small	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a small {$/;"	s
a.buttons	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a.buttons {$/;"	c
a.buttons:hover	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a.buttons:hover {$/;"	c
a.github	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a.github {$/;"	c
a.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a.header {$/;"	c
a.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1.header, h2.header, a.header, a.name, header a{$/;"	c
a.name	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a.name {$/;"	c
a.name	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1.header, h2.header, a.header, a.name, header a{$/;"	c
a:hover	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a:hover {$/;"	s
abbr	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
abstractstatic	docker_files/dexnet_base/dex-net/src/dexnet/abstractstatic.py	/^class abstractstatic(staticmethod):$/;"	c
access_level	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def access_level(self):$/;"	m	class:Database
acronym	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
add	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def add(self, datapoint):$/;"	m	class:Tensor
add	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def add(self, datapoint):$/;"	m	class:TensorDataset
add_graspable_object	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def add_graspable_object(self, graspable, T_obj_world=RigidTransform(from_frame='obj',$/;"	m	class:GraspCollisionChecker
address	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
alpha	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
ap_score	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def ap_score(self):$/;"	m	class:ClassificationResult
applehelp	docker_files/dexnet_base/dex-net/docs/Makefile	/^applehelp:$/;"	t
applet	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
approach_angle	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def approach_angle(self):$/;"	m	class:ParallelJawPtGrasp3D
approach_angle	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def approach_angle(self, angle):$/;"	m	class:ParallelJawPtGrasp3D
architecture	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config
args	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    args = parser.parse_args()$/;"	v
args	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    args = parser.parse_args()$/;"	v
args	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    args = parser.parse_args()$/;"	v
args	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^    args = parser.parse_args()$/;"	v
article	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^article, aside, canvas, details, embed,$/;"	s
asarray	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def asarray(self, proj_win_weight=0.0, grad_x_weight=0.0,$/;"	m	class:SurfaceWindow
aside	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^article, aside, canvas, details, embed,$/;"	s
attach_metadata_func	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def attach_metadata_func(self, metadata_name, metadata_func, overwrite=False, store_func=Tru/;"	m	class:Hdf5Dataset
auc_score	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def auc_score(self):$/;"	m	class:ClassificationResult
audio	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^time, mark, audio, video {$/;"	s
author	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^author = u'Jeff Mahler'$/;"	v
available_metrics	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def available_metrics(self, key, gripper='pr2'):$/;"	m	class:Hdf5Dataset
axis	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def axis(self):$/;"	m	class:ParallelJawPtGrasp3D
axis	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def axis(self):$/;"	m	class:VacuumPoint
axis_from_endpoints	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def axis_from_endpoints(g1, g2):$/;"	m	class:ParallelJawPtGrasp3D
b	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^b, u, i, center,$/;"	s
background_denoising	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
background_max_depth	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
background_min_depth	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
background_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
base_lr	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
batch_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
bernoulli_mean	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def bernoulli_mean(p):$/;"	m	class:BernoulliModel
bernoulli_variance	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def bernoulli_variance(p, n):$/;"	m	class:BernoulliModel
beta	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
beta_mean	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def beta_mean(alpha, beta):$/;"	m	class:BetaBernoulliModel
beta_variance	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def beta_variance(alpha, beta):$/;"	m	class:BetaBernoulliModel
bias	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
big	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
blockquote	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^blockquote {$/;"	s
blockquote	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
body	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  body {$/;"	s
body	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^body {$/;"	s
body	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
border_distortion	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
border_grad_sigma	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
border_grad_thresh	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
border_poisson_mean	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
border_radius_scale	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
border_radius_shape	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
cache_dir	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def cache_dir(self):$/;"	m	class:Hdf5Database
cache_dir	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def cache_dir(self):$/;"	m	class:MeshProcessor
canvas	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^article, aside, canvas, details, embed,$/;"	s
caption	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
category	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def category(self, key):$/;"	m	class:Hdf5Dataset
center	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^b, u, i, center,$/;"	s
center	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def center(self):$/;"	m	class:ParallelJawPtGrasp3D
center	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def center(self):$/;"	m	class:VacuumPoint
center	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def center(self, x):$/;"	m	class:ParallelJawPtGrasp3D
center_from_endpoints	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def center_from_endpoints(g1, g2):$/;"	m	class:ParallelJawPtGrasp3D
cfg	ros_nodes/grasp_plan_node.py	/^    cfg = YamlConfig('run_policy.yaml')$/;"	v
changes	docker_files/dexnet_base/dex-net/docs/Makefile	/^changes:$/;"	t
channels	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def channels(self):$/;"	m	class:Tensor
check_valid	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def check_valid(self, config):$/;"	m	class:GraspQualityConfig
check_valid	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def check_valid(self, config):$/;"	m	class:QuasiStaticGraspQualityConfig
check_valid	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def check_valid(self, config):$/;"	m	class:RobustQuasiStaticGraspQualityConfig
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, alphas):$/;"	m	class:CCBPLogLikelihood
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, beta):$/;"	m	class:LogisticCrossEntropyObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, est_p):$/;"	m	class:CrossEntropyLoss
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, est_p):$/;"	m	class:SquaredErrorLoss
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, est_p):$/;"	m	class:WeightedSquaredErrorLoss
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:IdentityObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:LeastSquaresObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:MaximizationObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:MinimizationObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:Objective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:RandomBinaryObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:RandomContinuousObjective
check_valid_input	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def check_valid_input(self, x):$/;"	m	class:ZeroOneObjective
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self):$/;"	m	class:BetaBernoulliGittinsIndex98Policy
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self):$/;"	m	class:DiscreteSelectionPolicy
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self):$/;"	m	class:MaxDiscreteSelectionPolicy
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self):$/;"	m	class:UniformSelectionPolicy
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self, stop = False):$/;"	m	class:BetaBernoulliBayesUCBPolicy
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self, stop = False):$/;"	m	class:ThompsonSelectionPolicy
choose_next	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def choose_next(self, stop=False):$/;"	m	class:GaussianUCBPolicy
cite	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
cite the Dex-Net 2.0 paper	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _cite the Dex-Net 2.0 paper: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/raw\/gh-pages/;"	T	section:Academic Use
clean	docker_files/dexnet_base/dex-net/docs/Makefile	/^clean:$/;"	t
close	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def close(self):$/;"	m	class:DexNet_cli
close	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def close(self):$/;"	m	class:Hdf5Database
close_database	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def close_database(self):$/;"	m	class:DexNet
close_dexnet	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def close_dexnet(signal=0, frame=None):$/;"	f
close_fingers	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def close_fingers(self, obj):$/;"	m	class:Grasp
close_fingers	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def close_fingers(self, obj, vis = False, check_approach=True, approach_dist = 0.2):$/;"	m	class:ParallelJawPtGrasp3D
close_width	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def close_width(self):$/;"	m	class:ParallelJawPtGrasp3D
code	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^a, abbr, acronym, address, big, cite, code,$/;"	s
code	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^code, pre {$/;"	s
collides_along_approach	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def collides_along_approach(self, grasp, approach_dist, delta_approach,$/;"	m	class:GraspCollisionChecker
collides_with_table	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^    def collides_with_table(self, grasp, stable_pose, clearance=0.0):$/;"	m	class:RobotGripper
color_frame	ros_nodes/test_camera_node.py	/^    def color_frame(self):$/;"	m	class:PrimesenseSensor
color_intrinsics	ros_nodes/test_camera_node.py	/^    def color_intrinsics(self):$/;"	m	class:PrimesenseSensor
complete	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def complete(self, text, state):$/;"	m	class:Completer
complete_extra	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def complete_extra(self, args):$/;"	m	class:Completer
compute_metadata	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def compute_metadata(self):$/;"	m	class:DexNet_cli
compute_metadata	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def compute_metadata(self, object_name, config=None, overwrite=False):$/;"	m	class:DexNet
compute_object_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def compute_object_metadata(self, key, metadata_names=None, force_overwrite=False):$/;"	m	class:Hdf5Dataset
compute_simulation_data	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def compute_simulation_data(self):$/;"	m	class:DexNet_cli
compute_simulation_data	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def compute_simulation_data(self, object_name, config=None):$/;"	m	class:DexNet
config	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    config = YamlConfig(config_filename)$/;"	v
config	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def config(self):$/;"	m	class:TensorDataset
config	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    config = YamlConfig(config_filename)$/;"	v
config	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^    config = YamlConfig(config_filename)$/;"	v
config	ros_nodes/robot_control.py	/^    config = YamlConfig('.\/control_node.yaml')$/;"	v
config_filename	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^        config_filename = os.path.join(os.getcwd(), config_filename)$/;"	v
config_filename	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^        config_filename = os.path.join(os.path.dirname(os.path.realpath(__file__)),$/;"	v
config_filename	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    config_filename = args.config_filename$/;"	v
config_filename	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^        config_filename = os.path.join(os.getcwd(), config_filename)$/;"	v
config_filename	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^        config_filename = os.path.join(os.path.dirname(os.path.realpath(__file__)),$/;"	v
config_filename	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    config_filename = args.config_filename$/;"	v
config_filename	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^        config_filename = os.path.join(os.getcwd(), config_filename)$/;"	v
config_filename	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^        config_filename = os.path.join(os.path.dirname(os.path.realpath(__file__)),$/;"	v
config_filename	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^    config_filename = args.config_filename$/;"	v
configuration	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def configuration(self):$/;"	m	class:Grasp
configuration	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def configuration(self):$/;"	m	class:ParallelJawPtGrasp3D
configuration	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def configuration(self):$/;"	m	class:VacuumPoint
configuration_from_params	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def configuration_from_params(*params):$/;"	m	class:Grasp
configuration_from_params	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def configuration_from_params(center, axis):$/;"	m	class:VacuumPoint
configuration_from_params	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def configuration_from_params(center, axis, width, angle=0, jaw_width=0, min_width=0):$/;"	m	class:ParallelJawPtGrasp3D
confusion_matrix	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def confusion_matrix(self):$/;"	m	class:ClassificationResult
connected_components	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def connected_components(self, key):$/;"	m	class:Hdf5Dataset
connected_components	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def connected_components(data):$/;"	m	class:Hdf5ObjectFactory
contains	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def contains(self, key):$/;"	m	class:GraspQualityConfig
continue_dexnet	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^        continue_dexnet = dexnet_cli.run_user_command()$/;"	v
continue_dexnet	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    continue_dexnet = True$/;"	v
conv1_1	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
conv1_1	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
conv1_2	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
conv1_2	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
conv2_1	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
conv2_1	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
conv2_2	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
conv2_2	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
convert_labels	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def convert_labels(self, mapping):$/;"	m	class:ClassificationResult
convex_piece_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def convex_piece_data(self, key):$/;"	m	class:Hdf5Dataset
convex_pieces	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def convex_pieces(self, key):$/;"	m	class:Hdf5Dataset
convex_pieces	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def convex_pieces(self):$/;"	m	class:GraspableObject
copyright	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^copyright = u'2017, Jeff Mahler'$/;"	v
correct_indices	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def correct_indices(self):$/;"	m	class:ClassificationResult
coverage	docker_files/dexnet_base/dex-net/docs/Makefile	/^coverage:$/;"	t
create_config	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def create_config(config):$/;"	m	class:GraspQualityConfigFactory
create_dataset	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def create_dataset(self, dataset_name, obj_keys=[]):$/;"	m	class:Hdf5Database
create_graspable	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def create_graspable(self, key, mesh=None, sdf=None, stable_poses=None, mass=1.0):$/;"	m	class:Hdf5Dataset
create_line_of_action	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def create_line_of_action(g, axis, width, obj, num_samples):$/;"	m	class:PointGrasp
create_line_of_action	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def create_line_of_action(g, axis, width, obj, num_samples, min_width = 0, convert_grid=True/;"	m	class:ParallelJawPtGrasp3D
create_linked_dataset	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def create_linked_dataset(self, dataset_name, graspable_list, nearest_neighbors):$/;"	m	class:Hdf5Database
create_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def create_metadata(self, metadata_name, metadata_type, metadata_description="No description/;"	m	class:Hdf5Dataset
create_metric	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def create_metric(self, metric_name, metric_config):$/;"	m	class:Hdf5Dataset
create_quality_function	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def create_quality_function(graspable, quality_config):$/;"	m	class:GraspQualityFunctionFactory
curvature	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def curvature(self):$/;"	m	class:SurfaceWindow
cv_bridge	ros_nodes/grasp_plan_node.py	/^    cv_bridge = CvBridge()$/;"	v
cvh	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    import pyhull.convex_hull as cvh$/;"	I
cvx	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    import cvxopt as cvx$/;"	I
data repository	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _data repository: http:\/\/bit.ly\/2uh07i9$/;"	T	chapter:Download Link
data_slice	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def data_slice(self, slice_ind):$/;"	m	class:Tensor
data_split_mode	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
database	docker_files/dexnet_base/dex-net/docs/source/api/database.rst	/^database$/;"	c
database	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    database = Hdf5Database(config['database_name'],$/;"	v
database manipulation	docker_files/dexnet_base/dex-net/docs/source/tutorials/tutorial.rst	/^.. _database manipulation:$/;"	T	section:Running Python Scripts
database_name	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    database_name = config['database']$/;"	v
datapoint	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def datapoint(self, ind):$/;"	m	class:Tensor
datapoint	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def datapoint(self, ind):$/;"	m	class:TensorDataset
datapoint_indices	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def datapoint_indices(self):$/;"	m	class:TensorDataset
datapoint_indices_for_tensor	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def datapoint_indices_for_tensor(self, tensor_index):$/;"	m	class:TensorDataset
datapoint_template	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def datapoint_template(self):$/;"	m	class:TensorDataset
datapoints_per_file	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def datapoints_per_file(self):$/;"	m	class:TensorDataset
dataset	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def dataset(self, dataset_name):$/;"	m	class:Hdf5Database
dataset	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^    dataset = TensorDataset.open(dataset_path)$/;"	v
dataset_dir	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
dataset_name	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    dataset_name = config['dataset']$/;"	v
dataset_path	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^        dataset_path = os.path.join(os.getcwd(), dataset_path)$/;"	v
dataset_path	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    dataset_path = args.dataset_path$/;"	v
dataset_path	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^        dataset_path = os.path.join(os.getcwd(), dataset_path)$/;"	v
dataset_path	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^    dataset_path = args.dataset_path$/;"	v
datasets	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def datasets(self):$/;"	m	class:Hdf5Database
db	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import dexnet.database.database as db$/;"	I
dd	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, dl p {$/;"	s
dd	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, ol, ul, li,$/;"	s
debug	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    debug = config['debug']$/;"	v
debug	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
debug_num_files	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
decay_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
decay_step_multiplier	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
del	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
delete_convex_pieces	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def delete_convex_pieces(self, key):$/;"	m	class:Hdf5Dataset
delete_graspable	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def delete_graspable(self, key):$/;"	m	class:Hdf5Dataset
delete_grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def delete_grasps(self, key, gripper='pr2', stable_pose_id=None):$/;"	m	class:Hdf5Dataset
delete_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def delete_metadata(self, metadata_name):$/;"	m	class:Hdf5Dataset
delete_metric	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def delete_metric(self, metric_name):$/;"	m	class:Hdf5Dataset
delete_object	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def delete_object(self, object_name):$/;"	m	class:DexNet
delete_rendered_images	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def delete_rendered_images(self, key, stable_pose_id=None, render_mode=RenderMode.DEPTH):$/;"	m	class:Hdf5Dataset
details	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^article, aside, canvas, details, embed,$/;"	s
detector_cfg	ros_nodes/robot_control.py	/^    detector_cfg = config['detector']$/;"	v
devhelp	docker_files/dexnet_base/dex-net/docs/Makefile	/^devhelp:$/;"	t
dex-net	docker_files/dexnet_base/dex-net/CMakeLists.txt	/^project(dex-net)$/;"	p
dexnet_cli	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    dexnet_cli = DexNet_cli()$/;"	v
dexnet_cli.py	docker_files/dexnet_base/dex-net/docs/source/tutorials/cli.rst	/^.. _dexnet_cli.py: https:\/\/github.com\/BerkeleyAutomation\/dex-net\/blob\/master\/apps\/dexnet/;"	T	chapter:Database Manipulation
dexnet_handle	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    dexnet_handle = DexNet()$/;"	v
dfn	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
dirhtml	docker_files/dexnet_base/dex-net/docs/Makefile	/^dirhtml:$/;"	t
discrete_maximize	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def discrete_maximize(self, candidates, termination_condition = MaxIterTerminationCondition(/;"	m	class:DiscreteAdaptiveSampler
discrete_maximize	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def discrete_maximize(self, candidates, termination_condition, snapshot_rate):$/;"	m	class:DiscreteSamplingSolver
display_grasps	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def display_grasps(self):$/;"	m	class:DexNet_cli
display_grasps	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def display_grasps(self, object_name, gripper_name, metric_name, config=None):$/;"	m	class:DexNet
display_menu	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def display_menu(self):$/;"	m	class:DexNet_cli
display_metadata	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def display_metadata(self):$/;"	m	class:DexNet_cli
display_object	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def display_object(self):$/;"	m	class:DexNet_cli
display_object	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def display_object(self, object_name, config=None):$/;"	m	class:DexNet
display_stable_poses	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def display_stable_poses(self):$/;"	m	class:DexNet_cli
display_stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def display_stable_poses(self, object_name, config=None):$/;"	m	class:DexNet
display_welcome	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def display_welcome(self):$/;"	m	class:DexNet_cli
distance	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def distance(g1, g2, alpha=0.05):$/;"	m	class:ParallelJawPtGrasp3D
div	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
div.wrapper	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  div.wrapper {$/;"	c
dl	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, dl p {$/;"	s
dl	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, ol, ul, li,$/;"	s
dl	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p, ul, ol, table, dl {$/;"	s
dl dd	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl dd {$/;"	s
dl dt	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl dt {$/;"	s
dl p	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl p {$/;"	s
dl p	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, dl p {$/;"	s
doctest	docker_files/dexnet_base/dex-net/docs/Makefile	/^doctest:$/;"	t
drop_fc3	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
drop_fc4	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
dropout_poisson_mean	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
dropout_radius_scale	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
dropout_radius_shape	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
dt	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, dl p {$/;"	s
dt	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, ol, ul, li,$/;"	s
dt	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^import datetime as dt$/;"	I
dt	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^import datetime as dt$/;"	I
dummy	docker_files/dexnet_base/dex-net/docs/Makefile	/^dummy:$/;"	t
em	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
em	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^em {$/;"	s
embed	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^article, aside, canvas, details, embed,$/;"	s
end	docker_files/dexnet_base/dex-net/docs/make.bat	/^:end$/;"	l
endpoints	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def endpoints(self):$/;"	m	class:ParallelJawPtGrasp3D
env	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def env(self):$/;"	m	class:OpenRaveCollisionChecker
env_	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    env_ = None$/;"	v	class:OpenRaveCollisionChecker
env_rv_params	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    env_rv_params = config['env_rv_params']$/;"	v
epub	docker_files/dexnet_base/dex-net/docs/Makefile	/^epub:$/;"	t
epub3	docker_files/dexnet_base/dex-net/docs/Makefile	/^epub3:$/;"	t
error_rate	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def error_rate(self):$/;"	m	class:ClassificationResult
error_rate	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def error_rate(self):$/;"	m	class:RegressionResult
et	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^import xml.etree.cElementTree as et$/;"	I
eval_frequency	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
eval_total_train_error	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, alphas, betas):$/;"	m	class:CCBPLogLikelihood
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, beta):$/;"	m	class:LogisticCrossEntropyObjective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, est_p):$/;"	m	class:CrossEntropyLoss
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, est_p):$/;"	m	class:SquaredErrorLoss
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, est_p, weights):$/;"	m	class:WeightedSquaredErrorLoss
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:IdentityObjective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:LeastSquaresObjective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:MaximizationObjective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:MinimizationObjective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:NonDeterministicObjective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:Objective
evaluate	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def evaluate(self, x):$/;"	m	class:ZeroOneObjective
exclude_patterns	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^exclude_patterns = []$/;"	v
execute_grasp_registration.py	docker_files/dexnet_base/dex-net/docs/source/scripts/examples.rst	/^execute_grasp_registration.py$/;"	s	chapter:Examples
execute_policy	ros_nodes/grasp_plan_node.py	/^    def execute_policy(self, rgbd_image_state, grasping_policy, grasp_pose_publisher, pose_frame/;"	m	class:GraspPlanner
expected_quality	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^    def expected_quality(grasp_rv, graspable_rv, params_rv, quality_config):$/;"	m	class:RobustPointGraspMetrics3D
export_objects	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def export_objects(self):$/;"	m	class:DexNet_cli
export_objects	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def export_objects(self, output_dir, export_filters={}, to_export=None, config=None):$/;"	m	class:DexNet
extended installation instructions	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^.. _extended installation instructions: https:\/\/docs.google.com\/document\/d\/1YImq1cBTy9E1n1O/;"	T	chapter:Issues
extensions	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^extensions = [$/;"	v
f	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^import perception as f$/;"	I
fc3	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
fc3	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
fc3_drop_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
fc4	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
fc4	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
fc4_drop_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
fc5	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
fc5	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
ferrari_canny_L1	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def ferrari_canny_L1(forces, torques, normals, soft_fingers=False, params=None,$/;"	m	class:PointGraspMetrics3D
field_names	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def field_names(self):$/;"	m	class:TensorDataset
fieldset	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^fieldset, form, label, legend,$/;"	s
figcaption	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^figure, figcaption, footer, header, hgroup,$/;"	s
figure	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^figure, figcaption, footer, header, hgroup,$/;"	s
file_ext	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def file_ext(self):$/;"	m	class:MeshProcessor
file_path	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def file_path(self):$/;"	m	class:MeshProcessor
file_root	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def file_root(self):$/;"	m	class:MeshProcessor
filename	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def filename(self):$/;"	m	class:MeshProcessor
filename	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def filename(self):$/;"	m	class:TensorDataset
filt_dim	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_1
filt_dim	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_2
filt_dim	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_1
filt_dim	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_2
filt_dim	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_1
filt_dim	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_2
filt_dim	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_1
filt_dim	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_2
find_contact	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def find_contact(line_of_action, obj, vis=True):$/;"	m	class:ParallelJawPtGrasp3D
fine_tune	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
finger_radius	docker_files/dexnet_base/dex-net/data/grippers/baxter/params.json	/^{"min_width": 0.025, "max_width": 0.06, "force_limit": 30.0, "finger_radius": 0.01}$/;"	n
finger_radius	docker_files/dexnet_base/dex-net/data/grippers/robotiq_85/params.json	/^{"min_width": 0.0, "force_limit": 235.0, "max_width": 0.085, "finger_radius": 0.01}$/;"	n
finger_radius	docker_files/dexnet_base/dex-net/data/grippers/yumi_metal_spline/params.json	/^{"min_width": 0.0, "force_limit": 20.0, "max_width": 0.05, "finger_radius": 0.01}$/;"	n
flush	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def flush(self):$/;"	m	class:Hdf5Database
flush	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def flush(self):$/;"	m	class:TensorDataset
footer	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^	footer {$/;"	s
footer	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header, section, footer {$/;"	s
footer	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^figure, figcaption, footer, header, hgroup,$/;"	s
footer	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^footer {$/;"	s
footer a	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^	footer a{$/;"	s
force_closure	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def force_closure(c1, c2, friction_coef, use_abs_value=True):$/;"	m	class:PointGraspMetrics3D
force_closure_qp	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def force_closure_qp(forces, torques, normals, soft_fingers=False,$/;"	m	class:PointGraspMetrics3D
force_limit	docker_files/dexnet_base/dex-net/data/grippers/baxter/params.json	/^{"min_width": 0.025, "max_width": 0.06, "force_limit": 30.0, "finger_radius": 0.01}$/;"	n
force_limit	docker_files/dexnet_base/dex-net/data/grippers/robotiq_85/params.json	/^{"min_width": 0.0, "force_limit": 235.0, "max_width": 0.085, "finger_radius": 0.01}$/;"	n
force_limit	docker_files/dexnet_base/dex-net/data/grippers/yumi_metal_spline/params.json	/^{"min_width": 0.0, "force_limit": 20.0, "max_width": 0.05, "finger_radius": 0.01}$/;"	n
form	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^fieldset, form, label, legend,$/;"	s
fpr	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def fpr(self):$/;"	m	class:ClassificationResult
frame	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def frame(self):$/;"	m	class:Grasp
frame	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def frame(self):$/;"	m	class:ParallelJawPtGrasp3D
frame	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def frame(self):$/;"	m	class:VacuumPoint
frame	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def frame(self, f):$/;"	m	class:ParallelJawPtGrasp3D
frame	ros_nodes/test_camera_node.py	/^    def frame(self):$/;"	m	class:PrimesenseSensor
frames	ros_nodes/test_camera_node.py	/^    def frames(self):$/;"	m	class:PrimesenseSensor
friction_cone	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def friction_cone(self, num_cone_faces=8, friction_coef=0.5):$/;"	m	class:Contact3D
gamma_shape	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gaussian_process_denoising	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gaussian_process_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gaussian_process_scaling_factor	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gaussian_process_sigma	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
generate_gqcnn_dataset	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^def generate_gqcnn_dataset(dataset_path,$/;"	f
generate_graspable	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def generate_graspable(self, config):$/;"	m	class:MeshProcessor
generate_grasps	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def generate_grasps(self, graspable, target_num_grasps=None, grasp_gen_mult=5, max_iter=3,$/;"	m	class:GraspSampler
generate_grasps_stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def generate_grasps_stable_poses(self, graspable, stable_poses, target_num_grasps=None, gras/;"	m	class:GraspSampler
generate_tensor_filename	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def generate_tensor_filename(self, field_name, file_num, compressed=True):$/;"	m	class:TensorDataset
get_grasps	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def get_grasps(self, object_name, gripper_name, metric_name=None):$/;"	m	class:DexNet
get_metadata	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def get_metadata(self, object_name, config=None):$/;"	m	class:DexNet
get_metadata_desc	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def get_metadata_desc(self, metadata_name):$/;"	m	class:Hdf5Dataset
get_metadata_types	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def get_metadata_types(self):$/;"	m	class:Hdf5Dataset
get_object	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def get_object(self, object_name):$/;"	m	class:DexNet
get_stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def get_stable_poses(self, object_name):$/;"	m	class:DexNet
gettext	docker_files/dexnet_base/dex-net/docs/Makefile	/^gettext:$/;"	t
gh-pages	docker_files/dexnet_base/dex-net/docs/Makefile	/^gh-pages:$/;"	t
gqc	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import dexnet.grasping.grasp_quality_config as gqc$/;"	I
gqcnn	train_network/model_fbbnqxtnbe/training_script.py	/^gqcnn = GQCNN(gqcnn_config)$/;"	v
gqcnn	train_network/train_net.py	/^gqcnn = GQCNN(gqcnn_config)$/;"	v
gqcnn data repository	docker_files/dexnet_base/dex-net/docs/source/data/data.rst	/^.. _gqcnn data repository: https:\/\/berkeley.box.com\/s\/p85ov4dx7vbq6y1l02gzrnsexg6yyayb$/;"	T	chapter:Download Link
gqcnn_config	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o
gqcnn_config	train_network/model_fbbnqxtnbe/training_script.py	/^gqcnn_config = train_config['gqcnn_config']$/;"	v
gqcnn_config	train_network/train_net.py	/^gqcnn_config = train_config['gqcnn_config']$/;"	v
gqf	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import dexnet.grasping.grasp_quality_function as gqf$/;"	I
gr	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import dexnet.grasping.gripper as gr$/;"	I
grad_x	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def grad_x(self):$/;"	m	class:SurfaceWindow
grad_x_2d	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def grad_x_2d(self):$/;"	m	class:SurfaceWindow
grad_y	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def grad_y(self):$/;"	m	class:SurfaceWindow
grad_y_2d	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def grad_y_2d(self):$/;"	m	class:SurfaceWindow
gradient	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def gradient(self, beta):$/;"	m	class:LogisticCrossEntropyObjective
gradient	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def gradient(self, x):$/;"	m	class:DifferentiableObjective
gradient	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def gradient(self, x):$/;"	m	class:LeastSquaresObjective
gradient	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def gradient(self, x):$/;"	m	class:MaximizationObjective
gradient	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def gradient(self, x):$/;"	m	class:MinimizationObjective
gradient_dropout	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gradient_dropout_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gradient_dropout_scale	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gradient_dropout_shape	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
gradient_dropout_sigma	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
grasp	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def grasp(self):$/;"	m	class:ParallelJawGraspPoseGaussianRV
grasp	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^    def grasp(self):$/;"	m	class:QuasiStaticGraspQualityRV
grasp	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer2d.py	/^    def grasp(grasp, color='r', arrow_len=4, arrow_head_len = 2, arrow_head_width = 3,$/;"	m	class:DexNetVisualizer2D
grasp	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^    def grasp(grasp, T_obj_world=RigidTransform(from_frame='obj', to_frame='world'),$/;"	m	class:DexNetVisualizer3D
grasp_angles_from_stp_z	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def grasp_angles_from_stp_z(self, stable_pose):$/;"	m	class:ParallelJawPtGrasp3D
grasp_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def grasp_data(self, key, gripper=None):$/;"	m	class:Hdf5Dataset
grasp_from_contact_and_axis_on_grid	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def grasp_from_contact_and_axis_on_grid(obj, grasp_c1_world, grasp_axis_world, grasp_width_w/;"	m	class:ParallelJawPtGrasp3D
grasp_from_endpoints	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def grasp_from_endpoints(g1, g2, width=None, approach_angle=0, close_width=0):$/;"	m	class:ParallelJawPtGrasp3D
grasp_in_collision	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def grasp_in_collision(self, T_obj_gripper, key=None):$/;"	m	class:GraspCollisionChecker
grasp_isotropy	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def grasp_isotropy(forces, torques, normals, soft_fingers=False, params=None):$/;"	m	class:PointGraspMetrics3D
grasp_matrix	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def grasp_matrix(forces, torques, normals, soft_fingers=False,$/;"	m	class:PointGraspMetrics3D
grasp_metric	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def grasp_metric(self, key, grasp, metric_name, gripper, stable_pose_id=None):$/;"	m	class:Hdf5Dataset
grasp_metrics	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def grasp_metrics(self, key, grasps, gripper='pr2', stable_pose_id=None):$/;"	m	class:Hdf5Dataset
grasp_metrics	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def grasp_metrics(grasps, data):$/;"	m	class:Hdf5ObjectFactory
grasp_planner	ros_nodes/grasp_plan_node.py	/^    grasp_planner = GraspPlanner(cfg, cv_bridge, grasping_policy, grasp_pose_publisher)$/;"	v
grasp_pose_publisher	ros_nodes/grasp_plan_node.py	/^    grasp_pose_publisher = rospy.Publisher('\/gqcnn_grasp\/pose', PoseStamped, queue_size=10)$/;"	v
grasp_quality	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def grasp_quality(grasp, obj, params, vis = False):$/;"	m	class:PointGraspMetrics3D
grasp_y_axis_offset	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def grasp_y_axis_offset(self, theta):$/;"	m	class:ParallelJawPtGrasp3D
graspable	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def graspable(self, key):$/;"	m	class:Hdf5Dataset
graspable	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def graspable(self):$/;"	m	class:Contact3D
graspable	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def graspable(self):$/;"	m	class:QuasiStaticQualityFunction
graspable	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def graspable(self):$/;"	m	class:RobustQuasiStaticQualityFunction
graspable	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def graspable(self, obj):$/;"	m	class:QuasiStaticQualityFunction
graspable	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def graspable(self, obj):$/;"	m	class:RobustQuasiStaticQualityFunction
grasping	docker_files/dexnet_base/dex-net/docs/source/api/grasping.rst	/^grasping$/;"	c
grasping_policy	ros_nodes/grasp_plan_node.py	/^    grasping_policy = CrossEntropyAntipodalGraspingPolicy(policy_cfg)$/;"	v
grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def grasps(self, key, gripper='pr2', stable_pose_id=None):$/;"	m	class:Hdf5Dataset
grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def grasps(data):$/;"	m	class:Hdf5ObjectFactory
gripper	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    gripper = RobotGripper.load(gripper_name)$/;"	v
gripper	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^    def gripper(gripper, grasp, T_obj_world, color=(0.5, 0.5, 0.5)):$/;"	m	class:DexNetVisualizer3D
gripper_name	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    gripper_name = config['gripper']$/;"	v
gripper_name	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    gripper_name = config['gripper']$/;"	v
gripper_on_object	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^    def gripper_on_object(gripper, grasp, obj, stable_pose=None,$/;"	m	class:DexNetVisualizer3D
gripper_pose	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def gripper_pose(self, gripper=None):$/;"	m	class:ParallelJawPtGrasp3D
gs	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import dexnet.grasping.grasp_sampler as gs$/;"	I
h1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1 {$/;"	s
h1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3 {$/;"	s
h1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
h1	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1,h2, h3 {$/;"	s
h1.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1.header {$/;"	c
h1.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1.header, h2.header, a.header, a.name, header a{$/;"	c
h2	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3 {$/;"	s
h2	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h2	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
h2	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1,h2, h3 {$/;"	s
h2	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h2 {$/;"	s
h2.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1.header, h2.header, a.header, a.name, header a{$/;"	c
h2.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h2.header {$/;"	c
h3	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3 {$/;"	s
h3	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h3	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
h3	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1,h2, h3 {$/;"	s
h3	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h3 {$/;"	s
h3.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h3.header {$/;"	c
h3.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h3.header, h4.header, h5.header, h6.header {$/;"	c
h4	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h4	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
h4	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h4 {$/;"	s
h4	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h4, h5, h6 {$/;"	s
h4.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h3.header, h4.header, h5.header, h6.header {$/;"	c
h5	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h5	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
h5	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h4, h5, h6 {$/;"	s
h5	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h5 {$/;"	s
h5.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h3.header, h4.header, h5.header, h6.header {$/;"	c
h6	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6 {$/;"	s
h6	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
h6	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h4, h5, h6 {$/;"	s
h6	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h6 {$/;"	s
h6.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h3.header, h4.header, h5.header, h6.header {$/;"	c
has_data	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def has_data(self):$/;"	m	class:Tensor
has_grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def has_grasps(self, key, gripper='pr2', stable_pose_id=None):$/;"	m	class:Hdf5Dataset
has_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def has_metadata(self, metadata_name):$/;"	m	class:Hdf5Dataset
has_metric	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def has_metric(self, metric_name):$/;"	m	class:Hdf5Dataset
has_rendered_images	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def has_rendered_images(self, key, stable_pose_id=None, render_mode=RenderMode.DEPTH):$/;"	m	class:Hdf5Dataset
header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header {$/;"	s
header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header, section, footer {$/;"	s
header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^figure, figcaption, footer, header, hgroup,$/;"	s
header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^header {$/;"	s
header a	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1.header, h2.header, a.header, a.name, header a{$/;"	s
header a small	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header a small {$/;"	s
header li	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^header li {$/;"	s
header li:hover	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^header li:hover {$/;"	s
header p.view	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header ul, header p.view {$/;"	c
header ul	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header ul {$/;"	s
header ul	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header ul, header p.view {$/;"	s
header ul	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^header ul {$/;"	s
height	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def height(self):$/;"	m	class:Tensor
help	docker_files/dexnet_base/dex-net/docs/Makefile	/^help:$/;"	t
hessian	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def hessian(self, beta):$/;"	m	class:LogisticCrossEntropyObjective
hessian	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def hessian(self, x):$/;"	m	class:DifferentiableObjective
hessian	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def hessian(self, x):$/;"	m	class:LeastSquaresObjective
hessian	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def hessian(self, x):$/;"	m	class:MaximizationObjective
hessian	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^    def hessian(self, x):$/;"	m	class:MinimizationObjective
hgroup	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^figure, figcaption, footer, header, hgroup,$/;"	s
hr	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^hr {$/;"	s
html	docker_files/dexnet_base/dex-net/docs/Makefile	/^html:$/;"	t
html	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
html_show_sourcelink	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^html_show_sourcelink = True$/;"	v
html_static_path	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^html_theme = 'sphinx_rtd_theme'$/;"	v
html_theme_path	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]$/;"	v
htmlhelp	docker_files/dexnet_base/dex-net/docs/Makefile	/^htmlhelp:$/;"	t
htmlhelp_basename	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^htmlhelp_basename = 'Dex-Netdoc'$/;"	v
i	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^b, u, i, center,$/;"	s
id	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def id(self):$/;"	m	class:ParallelJawPtGrasp3D
iframe	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
im_channels	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
im_height	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
im_width	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
image_dropout	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
image_dropout_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
image_mode	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
img	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
img	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^img {$/;"	s
in_collision	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def in_collision(self, names=None):$/;"	m	class:OpenRaveCollisionChecker
in_collision_single	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def in_collision_single(self, target_name, names=None):$/;"	m	class:OpenRaveCollisionChecker
in_direction	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def in_direction(self):$/;"	m	class:Contact3D
info	docker_files/dexnet_base/dex-net/docs/Makefile	/^info:$/;"	t
input_data_mode	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
input_data_mode	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s	object:gqcnn_config
ins	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
installation instructions	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _installation instructions: https:\/\/berkeleyautomation.github.io\/dex-net\/install\/install/;"	T	section:Overview
ir_frame	ros_nodes/test_camera_node.py	/^    def ir_frame(self):$/;"	m	class:PrimesenseSensor
ir_intrinsics	ros_nodes/test_camera_node.py	/^    def ir_intrinsics(self):$/;"	m	class:PrimesenseSensor
is_feasible	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def is_feasible(self, x):$/;"	m	class:OptimizationSolver
is_full	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def is_full(self):$/;"	m	class:Tensor
is_running	ros_nodes/test_camera_node.py	/^    def is_running(self):$/;"	m	class:PrimesenseSensor
is_running	ros_nodes/test_camera_node.py	/^    def is_running(self):$/;"	m	class:PrimesenseSensor_ROS
is_watertight	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def is_watertight(mesh):$/;"	m	class:DexNet
it	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^import itertools as it$/;"	I
it	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^import itertools as it$/;"	I
it	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^import itertools as it$/;"	I
it	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^import itertools as it$/;"	I
it	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^import itertools as it$/;"	I
jaw_width	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def jaw_width(self):$/;"	m	class:ParallelJawPtGrasp3D
json	docker_files/dexnet_base/dex-net/docs/Makefile	/^json:$/;"	t
kbd	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
kernel_matrix	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def kernel_matrix(self):$/;"	m	class:CorrelatedBetaBernoulliModel
key	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def key(self):$/;"	m	class:MeshProcessor
key	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def key(self):$/;"	m	class:GraspableObject
keys	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    def keys(self):$/;"	m	class:GraspQualityConfig
label	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^fieldset, form, label, legend,$/;"	s
label_vectors	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def label_vectors(self):$/;"	m	class:ClassificationResult
language	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^language = None$/;"	v
latex	docker_files/dexnet_base/dex-net/docs/Makefile	/^latex:$/;"	t
latex_documents	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^latex_documents = [$/;"	v
latex_elements	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^latex_elements = {$/;"	v
latexpdf	docker_files/dexnet_base/dex-net/docs/Makefile	/^latexpdf:$/;"	t
latexpdfja	docker_files/dexnet_base/dex-net/docs/Makefile	/^latexpdfja:$/;"	t
lcb_prediction	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def lcb_prediction(self, p=0.95):$/;"	m	class:CorrelatedBetaBernoulliModel
learning	docker_files/dexnet_base/dex-net/docs/source/api/learning.rst	/^learning$/;"	c
legend	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^fieldset, form, label, legend,$/;"	s
li	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, ol, ul, li,$/;"	s
li.download	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^li.download {$/;"	c
li.download:hover	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^li.download:hover {$/;"	c
linkcheck	docker_files/dexnet_base/dex-net/docs/Makefile	/^linkcheck:$/;"	t
list_grippers	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def list_grippers(self, config=None):$/;"	m	class:DexNet
list_metadata	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def list_metadata(self):$/;"	m	class:DexNet
list_metrics	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def list_metrics(self, config=None):$/;"	m	class:DexNet
list_objects	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def list_objects(self):$/;"	m	class:DexNet
load	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^    def load(gripper_name, gripper_dir='data\/grippers'):$/;"	m	class:RobotGripper
load	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def load(filename):$/;"	m	class:ClassificationResult
load	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def load(filename):$/;"	m	class:RegressionResult
load	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def load(filename, compressed=True):$/;"	m	class:Tensor
load_tensor	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def load_tensor(self, field_name, file_num):$/;"	m	class:TensorDataset
log_frequency	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
logger	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^logger = logging.getLogger(__name__)$/;"	v
loss	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
m	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^import meshpy.mesh as m$/;"	I
m	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^import meshpy.mesh as m$/;"	I
man	docker_files/dexnet_base/dex-net/docs/Makefile	/^man:$/;"	t
man_pages	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^man_pages = [$/;"	v
mark	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^time, mark, audio, video {$/;"	s
mass	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def mass(self):$/;"	m	class:GraspableObject
master_doc	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^master_doc = 'code'$/;"	v
matrix_product	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^            def matrix_product(theta):$/;"	f	function:ParallelJawPtGrasp3D._angle_aligned_with_stable_pose._get_matrix_product_x_axis	file:
matrix_product	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^            def matrix_product(theta):$/;"	f	function:ParallelJawPtGrasp3D._angle_aligned_with_table._get_matrix_product_x_axis	file:
max_prediction	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def max_prediction(self):$/;"	m	class:BernoulliModel
max_prediction	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def max_prediction(self):$/;"	m	class:BetaBernoulliModel
max_prediction	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def max_prediction(self):$/;"	m	class:DiscreteModel
max_prediction	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def max_prediction(self):$/;"	m	class:GaussianModel
max_training_examples_per_load	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
max_width	docker_files/dexnet_base/dex-net/data/grippers/baxter/params.json	/^{"min_width": 0.025, "max_width": 0.06, "force_limit": 30.0, "finger_radius": 0.01}$/;"	n
max_width	docker_files/dexnet_base/dex-net/data/grippers/robotiq_85/params.json	/^{"min_width": 0.0, "force_limit": 235.0, "max_width": 0.085, "finger_radius": 0.01}$/;"	n
max_width	docker_files/dexnet_base/dex-net/data/grippers/yumi_metal_spline/params.json	/^{"min_width": 0.0, "force_limit": 20.0, "max_width": 0.05, "finger_radius": 0.01}$/;"	n
mean	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def mean(self):$/;"	m	class:ParamsGaussianRV
means	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def means(self):$/;"	m	class:GaussianModel
median_depth_img	ros_nodes/test_camera_node.py	/^    def median_depth_img(self, num_img=1, fill_depth=0.0):$/;"	m	class:PrimesenseSensor
median_depth_img	ros_nodes/test_camera_node.py	/^    def median_depth_img(self, num_img=1, fill_depth=0.0):$/;"	m	class:PrimesenseSensor_ROS
menu	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^menu, nav, output, ruby, section, summary,$/;"	s
mesh	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def mesh(self, key):$/;"	m	class:Hdf5Dataset
mesh	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^import meshpy.mesh as mesh$/;"	I
mesh	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def mesh(self):$/;"	m	class:MeshProcessor
mesh	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def mesh(self):$/;"	m	class:GraspableObject
mesh_3d	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def mesh_3d(data):$/;"	m	class:Hdf5ObjectFactory
mesh_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def mesh_data(self, key):$/;"	m	class:Hdf5Dataset
metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metadata(self):$/;"	m	class:Hdf5Dataset
metadata_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metadata_data(self, metadata):$/;"	m	class:Hdf5Dataset
metadata_func	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metadata_func(self, metadata_name):$/;"	m	class:Hdf5Dataset
metadata_names	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metadata_names(self):$/;"	m	class:Hdf5Dataset
metric	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metric(self, metric_name):$/;"	m	class:Hdf5Dataset
metric_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metric_data(self, metric):$/;"	m	class:Hdf5Dataset
metric_name	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    metric_name = config['metric']$/;"	v
metric_names	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metric_names(self):$/;"	m	class:Hdf5Dataset
metric_thresh	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
metrics	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def metrics(self):$/;"	m	class:Hdf5Dataset
min_depth_img	ros_nodes/test_camera_node.py	/^    def min_depth_img(self, num_img=1):$/;"	m	class:PrimesenseSensor
min_depth_img	ros_nodes/test_camera_node.py	/^    def min_depth_img(self, num_img=1):$/;"	m	class:PrimesenseSensor_ROS
min_norm_vector_in_facet	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def min_norm_vector_in_facet(facet, wrench_regularizer=1e-10):$/;"	m	class:PointGraspMetrics3D
min_singular	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def min_singular(forces, torques, normals, soft_fingers=False, params=None):$/;"	m	class:PointGraspMetrics3D
min_width	docker_files/dexnet_base/dex-net/data/grippers/baxter/params.json	/^{"min_width": 0.025, "max_width": 0.06, "force_limit": 30.0, "finger_radius": 0.01}$/;"	n
min_width	docker_files/dexnet_base/dex-net/data/grippers/robotiq_85/params.json	/^{"min_width": 0.0, "force_limit": 235.0, "max_width": 0.085, "finger_radius": 0.01}$/;"	n
min_width	docker_files/dexnet_base/dex-net/data/grippers/yumi_metal_spline/params.json	/^{"min_width": 0.0, "force_limit": 20.0, "max_width": 0.05, "finger_radius": 0.01}$/;"	n
mispredicted_indices	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def mispredicted_indices(self):$/;"	m	class:ClassificationResult
mlab	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^    import mayavi.mlab as mlab$/;"	I
mlab	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    import mayavi.mlab as mlab$/;"	I
mlab	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    import mayavi.mlab as mlab$/;"	I
mlab	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^    import mayavi.mlab as mlab$/;"	I
mlab	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^    import mayavi.mlab as mlab$/;"	I
model_name	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def model_name(self):$/;"	m	class:GraspableObject
moment_arm	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def moment_arm(self, x):$/;"	m	class:GraspableObject3D
momentum_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
morph_open_rate	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
morph_poisson_mean	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
morphological	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
most_robust_grasp	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    most_robust_grasp = sorted_grasps[0][0] # Note: in general this step will require collision /;"	v
mp	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import dexnet.database.mesh_processor as mp$/;"	I
mtri	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer2d.py	/^import matplotlib.tri as mtri$/;"	I
mtri	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^import matplotlib.tri as mtri$/;"	I
multiclass_label_vectors	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def multiclass_label_vectors(self):$/;"	m	class:ClassificationResult
multiplicative_denoising	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
mv	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    import mayavi.mlab as mv$/;"	I
mv	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    import mayavi.mlab as mv$/;"	I
mv	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^    import mayavi.mlab as mv$/;"	I
name	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def name(self):$/;"	m	class:Hdf5Dataset
nav	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^menu, nav, output, ruby, section, summary,$/;"	s
next	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def next(self):$/;"	m	class:Hdf5Dataset
next	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def next(self):$/;"	m	class:TensorDataset
norm	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_1
norm	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_2
norm	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_1
norm	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_2
norm	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_1
norm	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_2
norm	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_1
norm	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_2
norm_type	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	s	object:conv1_1
norm_type	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	s	object:conv1_2
norm_type	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	s	object:conv2_1
norm_type	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	s	object:conv2_2
norm_type	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s	object:gqcnn_config.architecture.conv1_1
norm_type	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s	object:gqcnn_config.architecture.conv1_2
norm_type	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s	object:gqcnn_config.architecture.conv2_1
norm_type	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s	object:gqcnn_config.architecture.conv2_2
normal	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def normal(self):$/;"	m	class:Contact3D
normal	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def normal(self, normal):$/;"	m	class:Contact3D
normal_force_magnitude	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def normal_force_magnitude(self):$/;"	m	class:Contact3D
np	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer2d.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/test/database_test.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/test/learning_test.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^import numpy as np$/;"	I
np	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^import numpy as np$/;"	I
np	ros_nodes/robot_control.py	/^import numpy as np$/;"	I
np	ros_nodes/test_camera_node.py	/^import numpy as np$/;"	I
num_categories	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def num_categories(self):$/;"	m	class:ClassificationResult
num_datapoints	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def num_datapoints(self):$/;"	m	class:ClassificationResult
num_datapoints	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def num_datapoints(self):$/;"	m	class:RegressionResult
num_datapoints	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def num_datapoints(self):$/;"	m	class:Tensor
num_datapoints	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def num_datapoints(self):$/;"	m	class:TensorDataset
num_epochs	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
num_filt	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_1
num_filt	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_2
num_filt	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_1
num_filt	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_2
num_filt	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_1
num_filt	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_2
num_filt	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_1
num_filt	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_2
num_objects	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def num_objects(self):$/;"	m	class:Hdf5Dataset
num_random_files	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
num_tensor_channels	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
num_tensors	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def num_tensors(self):$/;"	m	class:TensorDataset
num_vars	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def num_vars(self):$/;"	m	class:DiscreteModel
obj	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def obj(self):$/;"	m	class:GraspableObjectPoseGaussianRV
obj	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^    def obj(self):$/;"	m	class:QuasiStaticGraspQualityRV
obj_file	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^import meshpy.obj_file as obj_file$/;"	I
obj_file	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^import meshpy.obj_file as obj_file$/;"	I
obj_file	docker_files/dexnet_base/dex-net/src/dexnet/grasping/gripper.py	/^import meshpy.obj_file as obj_file$/;"	I
obj_file	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^import meshpy.obj_file as obj_file$/;"	I
obj_file	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^import meshpy.obj_file as obj_file$/;"	I
obj_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def obj_filename(self):$/;"	m	class:MeshProcessor
obj_mesh_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def obj_mesh_filename(self, key, scale=1.0, output_dir=None, overwrite=False):$/;"	m	class:Hdf5Dataset
obj_names	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def obj_names(self):$/;"	m	class:GraspCollisionChecker
object	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
object	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def object(self, key):$/;"	m	class:Hdf5Dataset
object_keys	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def object_keys(self):$/;"	m	class:Hdf5Dataset
object_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def object_metadata(self, key):$/;"	m	class:Hdf5Dataset
object_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def object_metadata(data, metadata_types):$/;"	m	class:Hdf5ObjectFactory
object_name	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    object_name = config['object']$/;"	v
objects	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def objects(self):$/;"	m	class:Hdf5Dataset
objf	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^import meshpy.obj_file as objf$/;"	I
off_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def off_filename(self):$/;"	m	class:MeshProcessor
ol	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, ol, ul, li,$/;"	s
ol	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^ol {$/;"	s
ol	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p, ul, ol, table, dl {$/;"	s
on Google Docs	docker_files/dexnet_base/dex-net/docs/source/tutorials/cli.rst	/^.. _on Google Docs: http:\/\/bit.ly\/2uPEliy$/;"	T	chapter:Database Manipulation
open	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def open(dataset_dir):$/;"	m	class:TensorDataset
open_database	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def open_database(self):$/;"	m	class:DexNet_cli
open_database	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def open_database(self, database_path, config=None, create_db=True):$/;"	m	class:DexNet
open_dataset	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def open_dataset(self):$/;"	m	class:DexNet_cli
open_dataset	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    def open_dataset(self, dataset_name, config=None, create_ds=True):$/;"	m	class:DexNet
open_width	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def open_width(self):$/;"	m	class:ParallelJawPtGrasp3D
optimizer	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
orig_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def orig_filename(self):$/;"	m	class:MeshProcessor
out_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:fc3
out_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:fc4
out_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:fc5
out_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:pc1
out_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:pc2
out_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.fc3
out_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.fc4
out_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.fc5
out_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.pc1
out_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.pc2
output	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^menu, nav, output, ruby, section, summary,$/;"	s
output_dir	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
p	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
p	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p, ul, ol, table, dl {$/;"	s
p img	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p img {$/;"	s
p.header	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p.header {$/;"	c
parallel_table	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def parallel_table(self, stable_pose):$/;"	m	class:ParallelJawPtGrasp3D
params_from_configuration	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def params_from_configuration(configuration):$/;"	m	class:Grasp
params_from_configuration	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def params_from_configuration(configuration):$/;"	m	class:ParallelJawPtGrasp3D
params_from_configuration	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def params_from_configuration(configuration):$/;"	m	class:VacuumPoint
parser	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    parser = argparse.ArgumentParser(description='Command line interface to Dex-Net')$/;"	v
parser	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    parser = argparse.ArgumentParser(description='Example to demonstrate how to use grasps from /;"	v
parser	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    parser = argparse.ArgumentParser(description='Create a GQ-CNN training dataset from a datase/;"	v
parser	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^    parser = argparse.ArgumentParser()$/;"	v
partial_closure	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def partial_closure(forces, torques, normals, soft_fingers=False,$/;"	m	class:PointGraspMetrics3D
partition	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def partition(self, K):$/;"	m	class:DiscreteSamplingSolver
pc1	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
pc1	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
pc2	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	o
pc2	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	o	object:gqcnn_config.architecture
perception	ros_nodes/robot_control.py	/^import perception as perception$/;"	I
perpendicular_table	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def perpendicular_table(self, stable_pose):$/;"	m	class:ParallelJawPtGrasp3D
perturb_point	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def perturb_point(self, x, scale):$/;"	m	class:AntipodalGraspSampler
pickle	docker_files/dexnet_base/dex-net/docs/Makefile	/^pickle:$/;"	t
pkl	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^import cPickle as pkl$/;"	I
plan_grasp	ros_nodes/grasp_plan_node.py	/^    def plan_grasp(self, req):$/;"	m	class:GraspPlanner
plot_friction_cone	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def plot_friction_cone(self, color='y', scale=1.0):$/;"	m	class:Contact3D
plt	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_config.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer2d.py	/^import matplotlib.pyplot as plt$/;"	I
plt	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^import matplotlib.pyplot as plt$/;"	I
point	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def point(self):$/;"	m	class:Contact3D
point cloud dataset generation	docker_files/dexnet_base/dex-net/docs/source/tutorials/tutorial.rst	/^.. _point cloud dataset generation:$/;"	T	section:Running Python Scripts
policy_cfg	ros_nodes/grasp_plan_node.py	/^    policy_cfg = cfg['policy']$/;"	v
pool_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_1
pool_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_2
pool_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_1
pool_size	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_2
pool_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_1
pool_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_2
pool_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_1
pool_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_2
pool_stride	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_1
pool_stride	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv1_2
pool_stride	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_1
pool_stride	train_network/model_fbbnqxtnbe/architecture.json	/^{"conv1_1": {"filt_dim": 5, "num_filt": 32, "pool_size": 1, "pool_stride": 1, "norm": 0, "norm_t/;"	n	object:conv2_2
pool_stride	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_1
pool_stride	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv1_2
pool_stride	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_1
pool_stride	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config.architecture.conv2_2
posterior_alphas	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def posterior_alphas(self):$/;"	m	class:BetaBernoulliModel
posterior_betas	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def posterior_betas(self):$/;"	m	class:BetaBernoulliModel
pre	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^code, pre {$/;"	s
pre	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^h1, h2, h3, h4, h5, h6, p, blockquote, pre,$/;"	s
pre	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^pre {$/;"	s
precision	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def precision(self):$/;"	m	class:ClassificationResult
precision_recall_curve	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def precision_recall_curve(self, plot=False, line_width=2, font_size=15, color='b', style='-/;"	m	class:ClassificationResult
predict	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def predict(self, index):$/;"	m	class:BernoulliModel
predict	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def predict(self, index):$/;"	m	class:BetaBernoulliModel
predict	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def predict(self, index):$/;"	m	class:GaussianModel
predict	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def predict(self, x):$/;"	m	class:Model
predictions	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def predictions(self):$/;"	m	class:ClassificationResult
preproc_mode	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
process_GQCNNGrasp	ros_nodes/robot_control.py	/^def process_GQCNNGrasp(grasp, robot, left_arm, right_arm, subscriber, home_pose, config):$/;"	f
proj_win	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def proj_win(self):$/;"	m	class:SurfaceWindow
proj_win_2d	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def proj_win_2d(self):$/;"	m	class:SurfaceWindow
project	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^project = u'Dex-Net'$/;"	v
project_camera	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def project_camera(self, T_obj_camera, camera_intr):$/;"	m	class:ParallelJawPtGrasp3D
pseudoxml	docker_files/dexnet_base/dex-net/docs/Makefile	/^pseudoxml:$/;"	t
pygments_style	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^pygments_style = 'sphinx'$/;"	v
q	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
q_to_c	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^            q_to_c = lambda quality: config['quality_scale']$/;"	f	member:DexNet.display_grasps	file:
qthelp	docker_files/dexnet_base/dex-net/docs/Makefile	/^qthelp:$/;"	t
quality	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def quality(self, grasp):$/;"	m	class:GraspQualityFunction
quality	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def quality(self, grasp):$/;"	m	class:QuasiStaticQualityFunction
quality	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_quality_function.py	/^    def quality(self, grasp):$/;"	m	class:RobustQuasiStaticQualityFunction
queue_capacity	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
queue_sleep	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
radius	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n	object:gqcnn_config
random_force_closure_test_case	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^def random_force_closure_test_case(antipodal=False):$/;"	f
rave	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    import openravepy as rave$/;"	I
rave	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    import openravepy as rave$/;"	I
recall	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def recall(self):$/;"	m	class:ClassificationResult
reference_frame	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def reference_frame(self, align_axes=True):$/;"	m	class:Contact3D
reinit_fc3	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
reinit_fc4	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
reinit_fc5	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
reinit_pc1	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
release	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^release = u'0.2.0'$/;"	v
remove_object	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def remove_object(self, name):$/;"	m	class:OpenRaveCollisionChecker
rendered_image_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def rendered_image_data(self, key, stable_pose_id=None, image_type=None):$/;"	m	class:Hdf5Dataset
rendered_image_types	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def rendered_image_types(self, key, stable_pose_id=None):$/;"	m	class:Hdf5Dataset
rendered_images	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def rendered_images(self, key, stable_pose_id=None, render_mode=RenderMode.DEPTH):$/;"	m	class:Hdf5Dataset
rendered_images	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def rendered_images(data, render_mode=RenderMode.SEGMASK):$/;"	m	class:Hdf5ObjectFactory
requirements	docker_files/dexnet_base/dex-net/setup.py	/^requirements = [$/;"	v
rescale	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def rescale(self, scale):$/;"	m	class:GraspableObject3D
reset	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def reset(self):$/;"	m	class:Tensor
reset_model	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def reset_model(self, candidates):$/;"	m	class:BetaBernoulliBandit
reset_model	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def reset_model(self, candidates):$/;"	m	class:CorrelatedBetaBernoulliBandit
reset_model	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def reset_model(self, candidates):$/;"	m	class:DiscreteAdaptiveSampler
reset_model	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def reset_model(self, candidates):$/;"	m	class:GaussianBandit
roc_curve	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def roc_curve(self, plot=False, line_width=2, font_size=15, color='b', style='-', label=''):$/;"	m	class:ClassificationResult
rotated_full_axis	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def rotated_full_axis(self):$/;"	m	class:ParallelJawPtGrasp3D
ruby	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^menu, nav, output, ruby, section, summary,$/;"	s
run_experiment	ros_nodes/robot_control.py	/^def run_experiment():$/;"	f
run_user_command	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def run_user_command(self):$/;"	m	class:DexNet_cli
rvs	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^import autolab_core.random_variables as rvs$/;"	I
s	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
s	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^import meshpy.sdf as s$/;"	I
samp	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^del, dfn, em, img, ins, kbd, q, s, samp,$/;"	s
sample	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def sample(self, size=1):$/;"	m	class:GraspableObjectPoseGaussianRV
sample	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def sample(self, size=1):$/;"	m	class:ParallelJawGraspPoseGaussianRV
sample	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^    def sample(self, size=1):$/;"	m	class:ParamsGaussianRV
sample	docker_files/dexnet_base/dex-net/src/dexnet/grasping/robust_grasp_quality.py	/^    def sample(self, size=1):$/;"	m	class:QuasiStaticGraspQualityRV
sample	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def sample(self):$/;"	m	class:BernoulliModel
sample	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def sample(self):$/;"	m	class:DiscreteModel
sample	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def sample(self, stop=False):$/;"	m	class:GaussianModel
sample	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def sample(self, vis = False, stop = False):$/;"	m	class:BetaBernoulliModel
sample_from_cone	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def sample_from_cone(self, n, tx, ty, num_samples=1):$/;"	m	class:AntipodalGraspSampler
sample_grasps	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def sample_grasps(self, graspable):$/;"	m	class:GraspSampler
sample_grasps	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def sample_grasps(self, graspable, num_grasps,$/;"	m	class:AntipodalGraspSampler
sample_grasps	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def sample_grasps(self, graspable, num_grasps,$/;"	m	class:GaussianGraspSampler
sample_grasps	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def sample_grasps(self, graspable, num_grasps,$/;"	m	class:UniformGraspSampler
sample_variance	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def sample_variance(alpha, beta):$/;"	m	class:BetaBernoulliModel
sample_vars	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def sample_vars(self):$/;"	m	class:GaussianModel
samples_per_grid	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    samples_per_grid = 2 # global resolution for line of action$/;"	v	class:Grasp
save	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def save(self, filename):$/;"	m	class:ClassificationResult
save	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def save(self, filename):$/;"	m	class:RegressionResult
save	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def save(self, filename, compressed=True):$/;"	m	class:Tensor
save_frequency	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
sdf	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^import meshpy.sdf as sdf$/;"	I
sdf	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def sdf(self):$/;"	m	class:MeshProcessor
sdf	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def sdf(self):$/;"	m	class:GraspableObject
sdf_3d	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def sdf_3d(data):$/;"	m	class:Hdf5ObjectFactory
sdf_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def sdf_data(self, key):$/;"	m	class:Hdf5Dataset
sdf_file	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^import meshpy.sdf_file as sdf_file$/;"	I
sdf_file	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^import meshpy.sdf_file as sdf_file$/;"	I
sdf_file	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^import meshpy.sdf_file as sdf_file$/;"	I
sdf_file	docker_files/dexnet_base/dex-net/src/dexnet/grasping/random_variables.py	/^import meshpy.sdf_file as sdf_file$/;"	I
sdf_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def sdf_filename(self):$/;"	m	class:MeshProcessor
section	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^	section {$/;"	s
section	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  header, section, footer {$/;"	s
section	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^  section {$/;"	s
section	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^menu, nav, output, ruby, section, summary,$/;"	s
section	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^section {$/;"	s
sensor	ros_nodes/robot_control.py	/^    sensor = RgbdSensorFactory.sensor(sensor_type, sensor_cfg)$/;"	v
sensor_cfg	ros_nodes/robot_control.py	/^    sensor_cfg = config['sensor_cfg']$/;"	v
sensor_type	ros_nodes/robot_control.py	/^    sensor_type = sensor_cfg['type']$/;"	v
service	ros_nodes/grasp_plan_node.py	/^    service = rospy.Service('plan_gqcnn_grasp', GQCNNGraspPlanner, grasp_planner.plan_grasp)$/;"	v
setUpClass	docker_files/dexnet_base/dex-net/test/database_test.py	/^    def setUpClass(cls):$/;"	m	class:Hdf5DatabaseTest
set_config	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def set_config(self):$/;"	m	class:DexNet_cli
set_datapoint	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def set_datapoint(self, ind, datapoint):$/;"	m	class:Tensor
set_graspable_object	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def set_graspable_object(self, graspable, T_obj_world=RigidTransform(from_frame='obj',$/;"	m	class:GraspCollisionChecker
set_model	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^    def set_model(self, model):$/;"	m	class:DiscreteSelectionPolicy
set_object	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def set_object(self, name, filename, T_world_obj=None):$/;"	m	class:OpenRaveCollisionChecker
set_table	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def set_table(self, filename, T_table_world):$/;"	m	class:GraspCollisionChecker
set_target_object	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def set_target_object(self, key):$/;"	m	class:GraspCollisionChecker
set_transform	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def set_transform(self, name, T_world_obj):$/;"	m	class:OpenRaveCollisionChecker
set_view	docker_files/dexnet_base/dex-net/src/dexnet/grasping/collision_checker.py	/^    def set_view(self, view):$/;"	m	class:OpenRaveCollisionChecker
set_words	docker_files/dexnet_base/dex-net/apps/dexnet_cli.py	/^    def set_words(self, words):$/;"	m	class:Completer
shape	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def shape(self):$/;"	m	class:Tensor
show_filters	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
shrink	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_adaptive_samplers.py	/^    def shrink(self):$/;"	m	class:AdaptiveSamplingResult
singlehtml	docker_files/dexnet_base/dex-net/docs/Makefile	/^singlehtml:$/;"	t
sm	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^import sklearn.metrics as sm$/;"	I
small	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
snapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def snapshot(self):$/;"	m	class:BernoulliModel
snapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def snapshot(self):$/;"	m	class:BetaBernoulliModel
snapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def snapshot(self):$/;"	m	class:CorrelatedBetaBernoulliModel
snapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def snapshot(self):$/;"	m	class:GaussianModel
snapshot	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def snapshot(self):$/;"	m	class:Model
solve	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def solve(self, termination_condition = MaxIterTerminationCondition(DEF_MAX_ITER),$/;"	m	class:DiscreteSamplingSolver
solve	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def solve(self, termination_condition = MaxIterTerminationCondition(DEF_MAX_ITER),$/;"	m	class:Solver
sorted_grasps	docker_files/dexnet_base/dex-net/examples/execute_grasp_registration.py	/^    sorted_grasps = dexnet_handle.dataset.sorted_grasps(object_name, metric_name, gripper=grippe/;"	v
sorted_grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def sorted_grasps(self, key, metric, gripper='pr2', stable_pose_id=None):$/;"	m	class:Hdf5Dataset
source_suffix	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^source_suffix = '.rst'$/;"	v
span	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^html, body, div, span, applet, object, iframe,$/;"	s
sphinx	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^.. _sphinx: http:\/\/www.sphinx-doc.org\/en\/1.4.8\/$/;"	T	section:Building
sphinx_ok	docker_files/dexnet_base/dex-net/docs/make.bat	/^:sphinx_ok$/;"	l
sphinx_python	docker_files/dexnet_base/dex-net/docs/make.bat	/^:sphinx_python$/;"	l
split	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def split(self, attribute, train_pct, val_pct):$/;"	m	class:TensorDataset
ss	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^import scipy.spatial as ss$/;"	I
ss	docker_files/dexnet_base/dex-net/src/dexnet/learning/discrete_selection_policies.py	/^import scipy.stats as ss$/;"	I
ss	docker_files/dexnet_base/dex-net/src/dexnet/learning/objectives.py	/^import scipy.stats as ss$/;"	I
ssd	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer2d.py	/^import scipy.spatial.distance as ssd$/;"	I
ssd	docker_files/dexnet_base/dex-net/src/dexnet/visualization/visualizer3d.py	/^import scipy.spatial.distance as ssd$/;"	I
stable_pose	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def stable_pose(self, key, stable_pose_id):$/;"	m	class:Hdf5Dataset
stable_pose	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def stable_pose(data, stable_pose_id):$/;"	m	class:Hdf5ObjectFactory
stable_pose_data	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def stable_pose_data(self, key, stable_pose_id=None):$/;"	m	class:Hdf5Dataset
stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def stable_poses(self, key, min_p=0.0):$/;"	m	class:Hdf5Dataset
stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def stable_poses(data):$/;"	m	class:Hdf5ObjectFactory
stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def stable_poses(self):$/;"	m	class:MeshProcessor
start	ros_nodes/test_camera_node.py	/^    def start(self):$/;"	m	class:PrimesenseSensor
start	ros_nodes/test_camera_node.py	/^    def start(self):$/;"	m	class:PrimesenseSensor_ROS
stats	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^import scipy.stats as stats$/;"	I
stl_mesh_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def stl_mesh_filename(self, key, scale=1.0, output_dir=None, overwrite=False):$/;"	m	class:Hdf5Dataset
stop	ros_nodes/test_camera_node.py	/^    def stop(self):$/;"	m	class:PrimesenseSensor
stop	ros_nodes/test_camera_node.py	/^    def stop(self):$/;"	m	class:PrimesenseSensor_ROS
store_connected_components	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_connected_components(self, key, connected_components, force_overwrite=False):$/;"	m	class:Hdf5Dataset
store_convex_pieces	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_convex_pieces(self, key, convex_pieces, force_overwrite=False):$/;"	m	class:Hdf5Dataset
store_grasp_metrics	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_grasp_metrics(self, key, grasp_metric_dict, gripper='pr2', stable_pose_id=None, fo/;"	m	class:Hdf5Dataset
store_grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_grasps(self, key, grasps, gripper='pr2', stable_pose_id=None, force_overwrite=Fals/;"	m	class:Hdf5Dataset
store_mesh	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_mesh(self, key, mesh, force_overwrite=False):$/;"	m	class:Hdf5Dataset
store_object_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_object_metadata(self, key, metadata_dict, force_overwrite=False):$/;"	m	class:Hdf5Dataset
store_rendered_images	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_rendered_images(self, key, rendered_images, stable_pose_id=None, render_mode=Rende/;"	m	class:Hdf5Dataset
store_stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def store_stable_poses(self, key, stable_poses, force_overwrite=False):$/;"	m	class:Hdf5Dataset
stp	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^import meshpy.stable_pose as stp$/;"	I
stp_file	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^import meshpy.stp_file as stp_file$/;"	I
stp_file	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^import meshpy.stp_file as stp_file$/;"	I
stp_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/mesh_processor.py	/^    def stp_filename(self):$/;"	m	class:MeshProcessor
strike	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
strong	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
strong	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^strong {$/;"	s
sub	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
subset	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def subset(self, start_index, end_index):$/;"	m	class:Hdf5Dataset
summary	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^menu, nav, output, ruby, section, summary,$/;"	s
sup	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
surface_information	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def surface_information(self, width, num_steps, sigma_range=0.1, sigma_spatial=1,$/;"	m	class:Contact3D
surface_information	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def surface_information(self, graspable, width=2e-2, num_steps=21, direction=None):$/;"	m	class:ParallelJawPtGrasp3D
surface_information	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def surface_information(self, grasp, width, num_steps, plot=False, direction1=None, directio/;"	m	class:GraspableObject3D
surface_window_projection	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def surface_window_projection(self, width=1e-2, num_steps=21, $/;"	m	class:Contact3D
surface_window_projection_unaligned	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def surface_window_projection_unaligned(self, width=1e-2, num_steps=21,$/;"	m	class:Contact3D
surface_window_sdf	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def surface_window_sdf(self, width=1e-2, num_steps=21):$/;"	m	class:Contact3D
symmetrize	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
table	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p, ul, ol, table, dl {$/;"	s
table	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table {$/;"	s
table	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
tangents	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def tangents(self, direction=None, align_axes=True, max_samples=1000):$/;"	m	class:Contact3D
target_metric_name	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
target_object_keys	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    target_object_keys = config['target_objects']$/;"	v
tbody	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
td	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
td	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^td {$/;"	s
templates_path	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^templates_path = ['_templates']$/;"	v
tensor_dir	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def tensor_dir(self):$/;"	m	class:TensorDataset
tensor_index	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def tensor_index(self, datapoint_index):$/;"	m	class:TensorDataset
tensor_indices	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def tensor_indices(self):$/;"	m	class:TensorDataset
test_antipodal_grasp_sampler	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_antipodal_grasp_sampler(self):$/;"	m	class:GraspTest
test_contacts	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_contacts(self):$/;"	m	class:GraspTest
test_find_contacts	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_find_contacts(self):$/;"	m	class:GraspTest
test_force_closure	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_force_closure(self):$/;"	m	class:GraspTest
test_gaussian_uniform_alloc	docker_files/dexnet_base/dex-net/test/learning_test.py	/^    def test_gaussian_uniform_alloc(self, num_candidates=25):$/;"	m	class:LearningTest
test_grasp_quality_functions	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_grasp_quality_functions(self):$/;"	m	class:GraspTest
test_illegal_create	docker_files/dexnet_base/dex-net/test/database_test.py	/^    def test_illegal_create(self):$/;"	m	class:Hdf5DatabaseTest
test_init_grasp	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_init_grasp(self):$/;"	m	class:GraspTest
test_init_graspable	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_init_graspable(self):$/;"	m	class:GraspTest
test_init_gripper	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_init_gripper(self):$/;"	m	class:GraspTest
test_min_norm_vector_in_facet	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_min_norm_vector_in_facet(self):$/;"	m	class:GraspTest
test_new_database_and_graspable	docker_files/dexnet_base/dex-net/test/database_test.py	/^    def test_new_database_and_graspable(self):$/;"	m	class:Hdf5DatabaseTest
test_suite	docker_files/dexnet_base/dex-net/test/database_test.py	/^    test_suite = TestSuite()$/;"	v
test_suite	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    test_suite = TestSuite()$/;"	v
test_suite	docker_files/dexnet_base/dex-net/test/learning_test.py	/^    test_suite = TestSuite()$/;"	v
test_thompson_sampling	docker_files/dexnet_base/dex-net/test/learning_test.py	/^    def test_thompson_sampling(self, num_candidates=NUM_CANDIDATES):$/;"	m	class:LearningTest
test_uniform_alloc	docker_files/dexnet_base/dex-net/test/learning_test.py	/^    def test_uniform_alloc(self, num_candidates=NUM_CANDIDATES):$/;"	m	class:LearningTest
test_wrench_in_positive_span	docker_files/dexnet_base/dex-net/test/grasping_test.py	/^    def test_wrench_in_positive_span(self):$/;"	m	class:GraspTest
texinfo	docker_files/dexnet_base/dex-net/docs/Makefile	/^texinfo:$/;"	t
texinfo_documents	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^texinfo_documents = [$/;"	v
text	docker_files/dexnet_base/dex-net/docs/Makefile	/^text:$/;"	t
tfoot	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
th	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
th	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^th {$/;"	s
thead	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
time	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^time, mark, audio, video {$/;"	s
todo_include_todos	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^todo_include_todos = False$/;"	v
top_K_solve	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def top_K_solve(self, K, termination_condition = MaxIterTerminationCondition(DEF_MAX_ITER),$/;"	m	class:DiscreteSamplingSolver
top_K_solve	docker_files/dexnet_base/dex-net/src/dexnet/learning/solvers.py	/^    def top_K_solve(self, K, termination_condition = MaxIterTerminationCondition(DEF_MAX_ITER),$/;"	m	class:TopKSolver
top_k_error_rate	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def top_k_error_rate(self, k):$/;"	m	class:ClassificationResult
top_k_predictions	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def top_k_predictions(self, k):$/;"	m	class:ClassificationResult
torques	docker_files/dexnet_base/dex-net/src/dexnet/grasping/contacts.py	/^    def torques(self, forces):$/;"	m	class:Contact3D
total_pct	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
tr	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^table, caption, tbody, tfoot, thead, tr, th, td,$/;"	s
train_batch_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
train_config	train_network/model_fbbnqxtnbe/training_script.py	/^train_config = YamlConfig('training-high-epoch.yaml')$/;"	v
train_config	train_network/train_net.py	/^train_config = YamlConfig('training-high-epoch.yaml')$/;"	v
train_l2_regularizer	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
train_pct	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
training_mode	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	s
transform	docker_files/dexnet_base/dex-net/src/dexnet/grasping/graspable_object.py	/^    def transform(self, delta_T):$/;"	m	class:GraspableObject3D
tt	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
tutorial	docker_files/dexnet_base/dex-net/docs/source/tutorials/cli.rst	/^.. _tutorial: http:\/\/bit.ly\/2uPEliy$/;"	T	chapter:Database Manipulation
tutorials	docker_files/dexnet_base/dex-net/docs/source/code.rst	/^.. _tutorials: https:\/\/berkeleyautomation.github.io\/dex-net\/tutorials\/tutorial.html$/;"	T	section:Overview
u	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^b, u, i, center,$/;"	s
ul	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^dl, dt, dd, ol, ul, li,$/;"	s
ul	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^p, ul, ol, table, dl {$/;"	s
ul	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^ul {$/;"	s
unrotated_full_axis	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def unrotated_full_axis(self):$/;"	m	class:ParallelJawPtGrasp3D
update	docker_files/dexnet_base/dex-net/src/dexnet/learning/analysis.py	/^    def update(self, predictions, labels):$/;"	m	class:ConfusionMatrix
update	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def update(self):$/;"	m	class:Model
update	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def update(self, index, value):$/;"	m	class:BernoulliModel
update	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def update(self, index, value):$/;"	m	class:BetaBernoulliModel
update	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def update(self, index, value):$/;"	m	class:CorrelatedBetaBernoulliModel
update	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def update(self, index, value):$/;"	m	class:GaussianModel
update_conv0_only	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
update_fc_only	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
urdf_mesh_filename	docker_files/dexnet_base/dex-net/src/dexnet/database/database.py	/^    def urdf_mesh_filename(self, key, output_dir=None, overwrite=True):$/;"	m	class:Hdf5Dataset
utils	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^import autolab_core.utils as utils$/;"	I
utils	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^import autolab_core.utils as utils$/;"	I
utils	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^import autolab_core.utils as utils$/;"	I
val_batch_size	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
var	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^small, strike, strong, sub, sup, tt, var,$/;"	s
variances	docker_files/dexnet_base/dex-net/src/dexnet/learning/models.py	/^    def variances(self):$/;"	m	class:GaussianModel
version	docker_files/dexnet_base/dex-net/docs/source/conf.py	/^version = u'0.2.0'$/;"	v
video	docker_files/dexnet_base/dex-net/docs/source/static_content/stylesheets/styles.css	/^time, mark, audio, video {$/;"	s
vis	docker_files/dexnet_base/dex-net/src/dexnet/api.py	/^    from dexnet.visualization import DexNetVisualizer3D as vis$/;"	x
vis	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^    from dexnet.visualization import DexNetVisualizer3D as vis$/;"	x
vis	ros_nodes/grasp_plan_node.py	/^from gqcnn import Visualizer as vis$/;"	x
vis	ros_nodes/robot_control.py	/^from gqcnn import Visualizer as vis$/;"	x
vis2d	docker_files/dexnet_base/dex-net/tools/generate_gqcnn_dataset.py	/^from gqcnn import Visualizer as vis2d$/;"	x
vis2d	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^from gqcnn import Visualizer as vis2d$/;"	x
vis_frequency	train_network/model_fbbnqxtnbe/config.json	/^{"dataset_dir": "\/apps\/test\/adv_synth", "output_dir": "\/apps\/test\/highepoch", "train_batch/;"	n
visualization	docker_files/dexnet_base/dex-net/docs/source/api/visualization.rst	/^visualization$/;"	c
visualize_gqcnn_dataset.py	docker_files/dexnet_base/dex-net/docs/source/scripts/tools.rst	/^visualize_gqcnn_dataset.py$/;"	s	chapter:Tools
visualize_tensor_dataset	docker_files/dexnet_base/dex-net/tools/visualize_gqcnn_dataset.py	/^def visualize_tensor_dataset(dataset, config):$/;"	f
website	docker_files/dexnet_base/dex-net/docs/source/install/install.rst	/^.. _website: https:\/\/berkeleyautomation.github.io\/dex-net\/code.html$/;"	T	section:Building
width	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def width(self):$/;"	m	class:Tensor
width_from_endpoints	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp.py	/^    def width_from_endpoints(g1, g2):$/;"	m	class:ParallelJawPtGrasp3D
within_cone	docker_files/dexnet_base/dex-net/src/dexnet/grasping/grasp_sampler.py	/^    def within_cone(self, cone, n, v):$/;"	m	class:AntipodalGraspSampler
wrench_in_positive_span	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def wrench_in_positive_span(wrench_basis, target_wrench, force_limit, num_fingers=1,$/;"	m	class:PointGraspMetrics3D
wrench_resistance	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def wrench_resistance(forces, torques, normals, soft_fingers=False, $/;"	m	class:PointGraspMetrics3D
wrench_volume	docker_files/dexnet_base/dex-net/src/dexnet/grasping/quality.py	/^    def wrench_volume(forces, torques, normals, soft_fingers=False, params=None):$/;"	m	class:PointGraspMetrics3D
write	docker_files/dexnet_base/dex-net/src/dexnet/learning/tensor_dataset.py	/^    def write(self):$/;"	m	class:TensorDataset
write_connected_components	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_connected_components(connected_components, data, force_overwrite=False):$/;"	m	class:Hdf5ObjectFactory
write_grasp_metrics	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_grasp_metrics(grasp_metric_dict, data, force_overwrite=False):$/;"	m	class:Hdf5ObjectFactory
write_grasps	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_grasps(grasps, data, force_overwrite=False):$/;"	m	class:Hdf5ObjectFactory
write_mesh_3d	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_mesh_3d(mesh, data):$/;"	m	class:Hdf5ObjectFactory
write_object_metadata	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_object_metadata(metadata_dict, data, metadata_types, force_overwrite=False):$/;"	m	class:Hdf5ObjectFactory
write_rendered_images	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_rendered_images(rendered_images, data, force_overwrite=False):$/;"	m	class:Hdf5ObjectFactory
write_sdf_3d	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_sdf_3d(sdf, data):$/;"	m	class:Hdf5ObjectFactory
write_stable_poses	docker_files/dexnet_base/dex-net/src/dexnet/database/hdf5_factory.py	/^    def write_stable_poses(stable_poses, data, force_overwrite=False):$/;"	m	class:Hdf5ObjectFactory
xml	docker_files/dexnet_base/dex-net/docs/Makefile	/^xml:$/;"	t
